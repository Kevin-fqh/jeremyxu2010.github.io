<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on jeremy的技术点滴</title>
    <link>https://jeremyxu2010.github.io/tags/python/</link>
    <description>Recent content in python on jeremy的技术点滴</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; Copyright 2019 Jeremy Xu</copyright>
    <lastBuildDate>Fri, 05 Jun 2020 12:12:00 +0800</lastBuildDate>
    
	<atom:link href="https://jeremyxu2010.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>迁移历史遗留代码到python3</title>
      <link>https://jeremyxu2010.github.io/2020/06/%E8%BF%81%E7%A7%BB%E5%8E%86%E5%8F%B2%E9%81%97%E7%95%99%E4%BB%A3%E7%A0%81%E5%88%B0python3/</link>
      <pubDate>Fri, 05 Jun 2020 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/06/%E8%BF%81%E7%A7%BB%E5%8E%86%E5%8F%B2%E9%81%97%E7%95%99%E4%BB%A3%E7%A0%81%E5%88%B0python3/</guid>
      <description>为了便于以后维护代码，最近花了些时间将历史遗留代码迁移到python3，整个迁移还是比较顺利的，在做这个的过程中有一些经验，这里记录一下。 字</description>
    </item>
    
    <item>
      <title>python图算法实战</title>
      <link>https://jeremyxu2010.github.io/2020/02/python%E5%9B%BE%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sun, 16 Feb 2020 18:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/02/python%E5%9B%BE%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98/</guid>
      <description>复工后第一周的工作是用python写一个图遍历的算法，周末稍微总结一下。 纯手工写 最开始想挑战一下，于是不借助任何第三方库，纯手工编写，其实也</description>
    </item>
    
    <item>
      <title>学习django</title>
      <link>https://jeremyxu2010.github.io/2019/12/%E5%AD%A6%E4%B9%A0django/</link>
      <pubDate>Sun, 29 Dec 2019 14:48:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/12/%E5%AD%A6%E4%B9%A0django/</guid>
      <description>项目中使用了django，这个之前并没有深度使用过，今天花了些时间把官方文档大概浏览了一遍，简单学习了一下，这里简单记录一下以备忘。 快速上手</description>
    </item>
    
    <item>
      <title>解决HTTP File Server Hang住问题</title>
      <link>https://jeremyxu2010.github.io/2019/12/%E8%A7%A3%E5%86%B3http-file-server-hang%E4%BD%8F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 07 Dec 2019 13:26:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/12/%E8%A7%A3%E5%86%B3http-file-server-hang%E4%BD%8F%E9%97%AE%E9%A2%98/</guid>
      <description>出差大半个月，一直在客户现场处理各类疑难杂症，当中遇到一个小问题，有点意思，花了些时间诊断该问题，这里记录一下。 问题引出 突然有需求要临时搭建</description>
    </item>
    
    <item>
      <title>编译自定义Python二进制程序</title>
      <link>https://jeremyxu2010.github.io/2018/12/%E7%BC%96%E8%AF%91%E8%87%AA%E5%AE%9A%E4%B9%89python%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Fri, 28 Dec 2018 18:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/12/%E7%BC%96%E8%AF%91%E8%87%AA%E5%AE%9A%E4%B9%89python%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%A8%8B%E5%BA%8F/</guid>
      <description>工作中需要自行编译一个Python二进制程序，并尽量减少该程序依赖的库文件，使之在相同CPU架构上有更良好的可移植性。先找了下网上的资料，都</description>
    </item>
    
    <item>
      <title>写py2、py3兼容的代码</title>
      <link>https://jeremyxu2010.github.io/2017/11/%E5%86%99py2py3%E5%85%BC%E5%AE%B9%E7%9A%84%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sun, 05 Nov 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/11/%E5%86%99py2py3%E5%85%BC%E5%AE%B9%E7%9A%84%E4%BB%A3%E7%A0%81/</guid>
      <description>写py2、py3兼容的代码 用到一段时间python，之前也重点复习了一次python3。但工作中运行环境是python2.7，于是要求写出p</description>
    </item>
    
    <item>
      <title>py3_cookbook_notes_03</title>
      <link>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_03/</link>
      <pubDate>Mon, 23 Oct 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_03/</guid>
      <description>并发编程 启动与停止线程 # Code to execute in an independent thread import time def countdown(n): while n &amp;gt; 0: print(&amp;#39;T-minus&amp;#39;, n) n -= 1 time.sleep(5) # Create and launch a thread from threading import Thread t = Thread(target=countdown, args=(10,)) t.start() if t.is_alive(): print(&amp;#39;Still running&amp;#39;) else: print(&amp;#39;Completed&amp;#39;) t.join() t.daemon=True 如果线程执行一些像I/O这样</description>
    </item>
    
    <item>
      <title>py3_cookbook_notes_02</title>
      <link>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_02/</link>
      <pubDate>Sat, 07 Oct 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_02/</guid>
      <description>最近在看Python Cookbook第三版，将看书过程中一些平时不太容易注意的知识点记录下来。 函数 可接受任意数量参数的函数 def avg(first, *rest): return (first + sum(rest)) / (1</description>
    </item>
    
    <item>
      <title>py3_cookbook_notes_01</title>
      <link>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_01/</link>
      <pubDate>Thu, 05 Oct 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_01/</guid>
      <description>最近在看Python Cookbook第三版，将看书过程中一些平时不太容易注意的知识点记录下来。 数据结构和算法 解压可迭代对象赋值给多个变量 record =</description>
    </item>
    
    <item>
      <title>python开发小技巧</title>
      <link>https://jeremyxu2010.github.io/2017/09/python%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 30 Sep 2017 22:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/09/python%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>python开发小技巧 今天在工作中写了一个python脚本从数据库中导数据，其中用到了一些技巧，在这里记录一下。 判断字符串仅包含英文 直接通过</description>
    </item>
    
    <item>
      <title>使用keras破解验证码</title>
      <link>https://jeremyxu2010.github.io/2017/05/%E4%BD%BF%E7%94%A8keras%E7%A0%B4%E8%A7%A3%E9%AA%8C%E8%AF%81%E7%A0%81/</link>
      <pubDate>Sun, 07 May 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/05/%E4%BD%BF%E7%94%A8keras%E7%A0%B4%E8%A7%A3%E9%AA%8C%E8%AF%81%E7%A0%81/</guid>
      <description>今天做一个业务功能时，需要自动登录第三方系统，虽然第三方系统已经给我方分配了用户名及密码，但登录时必须必须输入验证码，如此就很难做到自动化登</description>
    </item>
    
    <item>
      <title>开发小技巧备忘</title>
      <link>https://jeremyxu2010.github.io/2017/04/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%A4%87%E5%BF%98/</link>
      <pubDate>Mon, 24 Apr 2017 20:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/04/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%A4%87%E5%BF%98/</guid>
      <description>今天一段时间一直在忙工作上的事，并没有系统地学习研究某一个具体的问题，但回顾这一个月的工作，发现还是有一些经验可以记录一下的。但这些经验没法</description>
    </item>
    
    <item>
      <title>tensorflow学习笔记_03</title>
      <link>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_03/</link>
      <pubDate>Sun, 19 Mar 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_03/</guid>
      <description>上一篇使用tensorflow完成一个卷积神经网络，但当时写的代码虽然可以工作，还比较零乱，并且并没有经过参数调优，最终得到的模型准确率也并</description>
    </item>
    
    <item>
      <title>使用snownlp进行评论情感分析</title>
      <link>https://jeremyxu2010.github.io/2017/03/%E4%BD%BF%E7%94%A8snownlp%E8%BF%9B%E8%A1%8C%E8%AF%84%E8%AE%BA%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 16 Mar 2017 20:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/%E4%BD%BF%E7%94%A8snownlp%E8%BF%9B%E8%A1%8C%E8%AF%84%E8%AE%BA%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90/</guid>
      <description>背景 最近项目中有一个需求，希望分析用户对某些商品的评论，以推测用户对这些商品的情感倾向，从而为运营人员管理这些商品提供依据。 这个问题属于自然</description>
    </item>
    
    <item>
      <title>tensorflow学习笔记_02</title>
      <link>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02/</link>
      <pubDate>Thu, 02 Mar 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02/</guid>
      <description>上一篇笔记采用一个线性关系的神经层处理了MNIST的训练数据，最后得到一个准确率一般的神经网络。但其实对于这种图像识别的场景，tensorf</description>
    </item>
    
    <item>
      <title>tensorflow学习笔记_01</title>
      <link>https://jeremyxu2010.github.io/2017/02/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/</link>
      <pubDate>Tue, 28 Feb 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/</guid>
      <description>最近看到一个有趣的项目pix2pix-tensorflow。大概功能是用户在网页上画一只猫的轮廓，然后它就可以输出与这个轮廓很相似的猫的清晰</description>
    </item>
    
    <item>
      <title>学习etcd</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E5%AD%A6%E4%B9%A0etcd/</link>
      <pubDate>Wed, 24 Aug 2016 01:24:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E5%AD%A6%E4%B9%A0etcd/</guid>
      <description>很早之前就听说过etcd，只记得是一个跟zookeeper很类似的东西，可以用来实现分布式锁。但一直没有关心这个东西到底是如何部署的，部署时</description>
    </item>
    
    <item>
      <title>使用阿里云API刷新CDN缓存</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91api%E5%88%B7%E6%96%B0cdn%E7%BC%93%E5%AD%98/</link>
      <pubDate>Mon, 22 Aug 2016 22:45:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91api%E5%88%B7%E6%96%B0cdn%E7%BC%93%E5%AD%98/</guid>
      <description>本时工作中经常需要向阿里云环境部署新的版本，部署完毕之后需要到阿里云管理控制台刷新页面的CDN缓存。这个过程中部署部分我现在是使用bash脚</description>
    </item>
    
    <item>
      <title>排序算法python实现</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95python%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 21 Aug 2016 19:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95python%E5%AE%9E%E7%8E%B0/</guid>
      <description>编写软件最基础莫过于算法了。今天在翻阅python的学习资料时，看到了别人用python实现的8大排序算法。很惭愧作为一个9年工作经验的程序</description>
    </item>
    
    <item>
      <title>python语言学习备忘</title>
      <link>https://jeremyxu2010.github.io/2016/08/python%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sun, 21 Aug 2016 14:48:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/python%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</guid>
      <description>作为一个有多年Java开发经验的老程序员，最近却被python精练的语法迷住了。同时发现python语言在云计算、系统运维领域确实用得很多，</description>
    </item>
    
  </channel>
</rss>