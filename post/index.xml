<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on jeremy的技术点滴</title>
    <link>https://jeremyxu2010.github.io/post/</link>
    <description>Recent content in Posts on jeremy的技术点滴</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; Copyright 2019 Jeremy Xu</copyright>
    <lastBuildDate>Sun, 16 Aug 2020 18:07:00 +0800</lastBuildDate>
    
	<atom:link href="https://jeremyxu2010.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>nodejs项目技术小结</title>
      <link>https://jeremyxu2010.github.io/2020/08/nodejs%E9%A1%B9%E7%9B%AE%E6%8A%80%E6%9C%AF%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Sun, 16 Aug 2020 18:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/08/nodejs%E9%A1%B9%E7%9B%AE%E6%8A%80%E6%9C%AF%E5%B0%8F%E7%BB%93/</guid>
      <description>最近在很紧张地使用typescript开发一个项目。和正常的业务项目很类似，前期的设计及技术框架搭建还有些意思，目前在做的业务功能开发就比较</description>
    </item>
    
    <item>
      <title>微服务中的分布式锁方案</title>
      <link>https://jeremyxu2010.github.io/2020/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sun, 19 Jul 2020 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/07/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%96%B9%E6%A1%88/</guid>
      <description>最近在工作中碰到一个分布式锁问题，这个问题之前做项目的过程也搞过，不过没有深入整理，这个周末有时间刚好整理一把。 为什么需要分布式锁？ 在分布式</description>
    </item>
    
    <item>
      <title>迁移历史遗留代码到python3</title>
      <link>https://jeremyxu2010.github.io/2020/06/%E8%BF%81%E7%A7%BB%E5%8E%86%E5%8F%B2%E9%81%97%E7%95%99%E4%BB%A3%E7%A0%81%E5%88%B0python3/</link>
      <pubDate>Fri, 05 Jun 2020 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/06/%E8%BF%81%E7%A7%BB%E5%8E%86%E5%8F%B2%E9%81%97%E7%95%99%E4%BB%A3%E7%A0%81%E5%88%B0python3/</guid>
      <description>为了便于以后维护代码，最近花了些时间将历史遗留代码迁移到python3，整个迁移还是比较顺利的，在做这个的过程中有一些经验，这里记录一下。 字</description>
    </item>
    
    <item>
      <title>技术分享之工具推荐</title>
      <link>https://jeremyxu2010.github.io/2020/05/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E4%B9%8B%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Sun, 03 May 2020 14:53:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/05/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E4%B9%8B%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/</guid>
      <description>最近干的工作比较杂，没有时间进行记录，很久没有写博客了，惭愧！正好五一假日期间有一些时间，把一些点滴记录下来。 一个事情是最近给组内的同学进行</description>
    </item>
    
    <item>
      <title>数据库基础知识</title>
      <link>https://jeremyxu2010.github.io/2020/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 15 Mar 2020 22:36:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>最近做的工作与数据库操作有一些关系，这里将数据库的一些基础知识总结一下以备忘。 为什么需要ACID？ 读书时学过关系型数据库必须具备四个特性：原</description>
    </item>
    
    <item>
      <title>微服务中的分布式事务方案</title>
      <link>https://jeremyxu2010.github.io/2020/03/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sun, 01 Mar 2020 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/03/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%96%B9%E6%A1%88/</guid>
      <description>最近在工作中碰到一个分布式事务问题，这个问题之前做项目的过程也搞过，不过没有深入整理，这个周末有时间刚好整理一把。 问题引出 在微服务架构中，随</description>
    </item>
    
    <item>
      <title>python图算法实战</title>
      <link>https://jeremyxu2010.github.io/2020/02/python%E5%9B%BE%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sun, 16 Feb 2020 18:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/02/python%E5%9B%BE%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98/</guid>
      <description>复工后第一周的工作是用python写一个图遍历的算法，周末稍微总结一下。 纯手工写 最开始想挑战一下，于是不借助任何第三方库，纯手工编写，其实也</description>
    </item>
    
    <item>
      <title>享受自由的网络</title>
      <link>https://jeremyxu2010.github.io/2020/02/%E4%BA%AB%E5%8F%97%E8%87%AA%E7%94%B1%E7%9A%84%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 16 Feb 2020 12:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/02/%E4%BA%AB%E5%8F%97%E8%87%AA%E7%94%B1%E7%9A%84%E7%BD%91%E7%BB%9C/</guid>
      <description>最近在家办公，发现天朝的网络限制越来越严了。周末终于有时间，把家里电脑的上网状况改善一下了，这里记录一下。 搭FQ的梯子 在香港买了台服务器，在</description>
    </item>
    
    <item>
      <title>分析APP访问后台服务的网络故障</title>
      <link>https://jeremyxu2010.github.io/2020/01/%E5%88%86%E6%9E%90app%E8%AE%BF%E9%97%AE%E5%90%8E%E5%8F%B0%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%BD%91%E7%BB%9C%E6%95%85%E9%9A%9C/</link>
      <pubDate>Mon, 06 Jan 2020 11:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2020/01/%E5%88%86%E6%9E%90app%E8%AE%BF%E9%97%AE%E5%90%8E%E5%8F%B0%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%BD%91%E7%BB%9C%E6%95%85%E9%9A%9C/</guid>
      <description>工作中一个小问题，Android手机上的APP访问后台服务频繁出现网络超时。以下为分析此问题的简要步骤，记录一下以备忘。 了解网络链路 首先大致</description>
    </item>
    
    <item>
      <title>学习django</title>
      <link>https://jeremyxu2010.github.io/2019/12/%E5%AD%A6%E4%B9%A0django/</link>
      <pubDate>Sun, 29 Dec 2019 14:48:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/12/%E5%AD%A6%E4%B9%A0django/</guid>
      <description>项目中使用了django，这个之前并没有深度使用过，今天花了些时间把官方文档大概浏览了一遍，简单学习了一下，这里简单记录一下以备忘。 快速上手</description>
    </item>
    
    <item>
      <title>60秒完成Linux系统的性能分析(译)</title>
      <link>https://jeremyxu2010.github.io/2019/12/60%E7%A7%92%E5%AE%8C%E6%88%90linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E8%AF%91/</link>
      <pubDate>Sat, 14 Dec 2019 20:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/12/60%E7%A7%92%E5%AE%8C%E6%88%90linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E8%AF%91/</guid>
      <description>偶然间看到一篇英文文档，觉得还挺有用的，尝试翻译一下以加深记忆。 翻译自https://medium.com/netflix-techblog</description>
    </item>
    
    <item>
      <title>解决HTTP File Server Hang住问题</title>
      <link>https://jeremyxu2010.github.io/2019/12/%E8%A7%A3%E5%86%B3http-file-server-hang%E4%BD%8F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 07 Dec 2019 13:26:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/12/%E8%A7%A3%E5%86%B3http-file-server-hang%E4%BD%8F%E9%97%AE%E9%A2%98/</guid>
      <description>出差大半个月，一直在客户现场处理各类疑难杂症，当中遇到一个小问题，有点意思，花了些时间诊断该问题，这里记录一下。 问题引出 突然有需求要临时搭建</description>
    </item>
    
    <item>
      <title>优化nginx-ingress-controller并发性能</title>
      <link>https://jeremyxu2010.github.io/2019/11/%E4%BC%98%E5%8C%96nginx-ingress-controller%E5%B9%B6%E5%8F%91%E6%80%A7%E8%83%BD/</link>
      <pubDate>Sun, 10 Nov 2019 18:35:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/11/%E4%BC%98%E5%8C%96nginx-ingress-controller%E5%B9%B6%E5%8F%91%E6%80%A7%E8%83%BD/</guid>
      <description>这两天遇到一个很有意思的应用场景：有一个业务应用部署在kubernetes容器中，如果将该应用以Kubernetes Service NodePort暴露出</description>
    </item>
    
    <item>
      <title>kubernetes集群部署运营实践总结</title>
      <link>https://jeremyxu2010.github.io/2019/11/kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E8%BF%90%E8%90%A5%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 02 Nov 2019 18:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/11/kubernetes%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E8%BF%90%E8%90%A5%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</guid>
      <description>最近为项目奔波，都没有多少时间写博文了。。。不过这大半个月在客户现场处理了大量kubernetes集群部署运营的相关工作，这里总结一下。 ku</description>
    </item>
    
    <item>
      <title>避免容器中运行的Java应用被杀掉</title>
      <link>https://jeremyxu2010.github.io/2019/10/%E9%81%BF%E5%85%8D%E5%AE%B9%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8C%E7%9A%84java%E5%BA%94%E7%94%A8%E8%A2%AB%E6%9D%80%E6%8E%89/</link>
      <pubDate>Sun, 06 Oct 2019 13:19:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/10/%E9%81%BF%E5%85%8D%E5%AE%B9%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8C%E7%9A%84java%E5%BA%94%E7%94%A8%E8%A2%AB%E6%9D%80%E6%8E%89/</guid>
      <description>今天测试环境遇到一个问题，一个Java的容器由于OOM频繁被Killed掉。这个问题还经常出现的，这里记录下解决过程。 为啥会频繁OOM？ 首先</description>
    </item>
    
    <item>
      <title>生成多平台docker镜像</title>
      <link>https://jeremyxu2010.github.io/2019/09/%E7%94%9F%E6%88%90%E5%A4%9A%E5%B9%B3%E5%8F%B0docker%E9%95%9C%E5%83%8F/</link>
      <pubDate>Mon, 30 Sep 2019 20:35:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/09/%E7%94%9F%E6%88%90%E5%A4%9A%E5%B9%B3%E5%8F%B0docker%E9%95%9C%E5%83%8F/</guid>
      <description>工作中需要在一台x86服务器从写好的golang程序源码生成linux/amd64、linux/arm64 docker镜像，查阅了下资料，这</description>
    </item>
    
    <item>
      <title>kubernetes CSI存储插件探究</title>
      <link>https://jeremyxu2010.github.io/2019/09/kubernetes-csi%E5%AD%98%E5%82%A8%E6%8F%92%E4%BB%B6%E6%8E%A2%E7%A9%B6/</link>
      <pubDate>Sun, 29 Sep 2019 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/09/kubernetes-csi%E5%AD%98%E5%82%A8%E6%8F%92%E4%BB%B6%E6%8E%A2%E7%A9%B6/</guid>
      <description>本周帮助为一个kubernetes CSI插件实现了动态供应(dynamic provisioning)功能，在这个过程中学习并了解了kuber</description>
    </item>
    
    <item>
      <title>编译arm64平台的软件包</title>
      <link>https://jeremyxu2010.github.io/2019/09/%E7%BC%96%E8%AF%91arm64%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85/</link>
      <pubDate>Fri, 20 Sep 2019 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/09/%E7%BC%96%E8%AF%91arm64%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85/</guid>
      <description>本周做了较多的国产化适配工作，虽然主要是拿到源码在国产化平台上编译一下，不是太难，但还是总结一下。 国产化平台使用的是arm64v8 CPU芯片</description>
    </item>
    
    <item>
      <title>kubernetes使用ceph存储卷</title>
      <link>https://jeremyxu2010.github.io/2019/09/kubernetes%E4%BD%BF%E7%94%A8ceph%E5%AD%98%E5%82%A8%E5%8D%B7/</link>
      <pubDate>Sat, 07 Sep 2019 18:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/09/kubernetes%E4%BD%BF%E7%94%A8ceph%E5%AD%98%E5%82%A8%E5%8D%B7/</guid>
      <description>最近我在kubernetes中使用了ceph的rbd及cephfs存储卷，遇到了一些问题，并逐一解决了，在这里记录一下。 ceph rbd存储卷扩容失</description>
    </item>
    
    <item>
      <title>kubernetes中部署mysql高可用集群</title>
      <link>https://jeremyxu2010.github.io/2019/08/kubernetes%E4%B8%AD%E9%83%A8%E7%BD%B2mysql%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Sat, 31 Aug 2019 18:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/08/kubernetes%E4%B8%AD%E9%83%A8%E7%BD%B2mysql%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</guid>
      <description>很多软件后端使用的存储都是mysql，当这些软件系统在生产环境部署时，都会面临一个严峻问题，需要在生产环境中部署一个高可用的mysql集群服</description>
    </item>
    
    <item>
      <title>MQTT协议学习</title>
      <link>https://jeremyxu2010.github.io/2019/08/mqtt%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sat, 24 Aug 2019 20:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/08/mqtt%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/</guid>
      <description>偶然在github上看到paho.mqtt.golang项目，这是一个MQTT客户端库，进而花了些时间学习下时下十分火热的MQTT协议。 MQ</description>
    </item>
    
    <item>
      <title>让kong监听80和443端口</title>
      <link>https://jeremyxu2010.github.io/2019/08/%E8%AE%A9kong%E7%9B%91%E5%90%AC80%E5%92%8C443%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Sat, 17 Aug 2019 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/08/%E8%AE%A9kong%E7%9B%91%E5%90%AC80%E5%92%8C443%E7%AB%AF%E5%8F%A3/</guid>
      <description>问题 使用kong的chart，在kubernetes集群默认安装出来kong的容器是监听8000和8443端口的，而为了让外部以80和443</description>
    </item>
    
    <item>
      <title>使用casbin完成验证授权</title>
      <link>https://jeremyxu2010.github.io/2019/08/%E4%BD%BF%E7%94%A8casbin%E5%AE%8C%E6%88%90%E9%AA%8C%E8%AF%81%E6%8E%88%E6%9D%83/</link>
      <pubDate>Sat, 10 Aug 2019 15:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/08/%E4%BD%BF%E7%94%A8casbin%E5%AE%8C%E6%88%90%E9%AA%8C%E8%AF%81%E6%8E%88%E6%9D%83/</guid>
      <description>上一篇讲了搭建一个身份认证系统，可以看到借助dex搭建一个安全可靠的身份认证系统并不是太难。本篇再讲一下用casbin完成验证授权。 什么是验</description>
    </item>
    
    <item>
      <title>使用dex搭建一个身份认证系统</title>
      <link>https://jeremyxu2010.github.io/2019/08/%E4%BD%BF%E7%94%A8dex%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 04 Aug 2019 15:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/08/%E4%BD%BF%E7%94%A8dex%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F/</guid>
      <description>一个成熟的软件系统一般必须有一个可靠的身份认证与权限验证功能。这一块要自研快速实现还是需要花费挺多精力的，幸好开源领域目前已经有不错的解决方</description>
    </item>
    
    <item>
      <title>限制kubernetes里的系统资源使用</title>
      <link>https://jeremyxu2010.github.io/2019/07/%E9%99%90%E5%88%B6kubernetes%E9%87%8C%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 28 Jul 2019 20:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/07/%E9%99%90%E5%88%B6kubernetes%E9%87%8C%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E4%BD%BF%E7%94%A8/</guid>
      <description>工作中需要对kubernetes中workload使用的系统资源进行一些限制，本周花时间研究了一下，这里记录一下。 kubernetes的系统</description>
    </item>
    
    <item>
      <title>使用Aggregated APIServer的方式构建API服务</title>
      <link>https://jeremyxu2010.github.io/2019/07/%E4%BD%BF%E7%94%A8aggregated-apiserver%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9E%84%E5%BB%BAapi%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Sat, 20 Jul 2019 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/07/%E4%BD%BF%E7%94%A8aggregated-apiserver%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9E%84%E5%BB%BAapi%E6%9C%8D%E5%8A%A1/</guid>
      <description>工作中需要以kubernetes原生的方式构建API接口服务，并将构建出的API接口直接聚合到kubernetes的apiserver服务上</description>
    </item>
    
    <item>
      <title>彻底解决pvc无法mount的问题</title>
      <link>https://jeremyxu2010.github.io/2019/07/%E5%BD%BB%E5%BA%95%E8%A7%A3%E5%86%B3pvc%E6%97%A0%E6%B3%95mount%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 14 Jul 2019 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/07/%E5%BD%BB%E5%BA%95%E8%A7%A3%E5%86%B3pvc%E6%97%A0%E6%B3%95mount%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>上周解决pvc无法mount的问题，其实留了一个尾巴，当时只是知道由于未知的原因，AttachDetachController执行detac</description>
    </item>
    
    <item>
      <title>解决pvc无法mount的问题</title>
      <link>https://jeremyxu2010.github.io/2019/07/%E8%A7%A3%E5%86%B3pvc%E6%97%A0%E6%B3%95mount%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 07 Jul 2019 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/07/%E8%A7%A3%E5%86%B3pvc%E6%97%A0%E6%B3%95mount%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>这周遇到了两个因pvc无法attach导致pod一直没法正常启动的问题，这里记录一下解决的过程。 问题一 问题描述 一个deployment，在其</description>
    </item>
    
    <item>
      <title>完善cni的ipam方案</title>
      <link>https://jeremyxu2010.github.io/2019/07/%E5%AE%8C%E5%96%84cni%E7%9A%84ipam%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sun, 07 Jul 2019 14:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/07/%E5%AE%8C%E5%96%84cni%E7%9A%84ipam%E6%96%B9%E6%A1%88/</guid>
      <description>上两周，为了优化k8s的网络性能，最终选择了macvlan+ptp方案，最终性能也达到标准了。但其实存在一个问题，macvlan的pod的I</description>
    </item>
    
    <item>
      <title>清除k8s使用underlay网络的障碍</title>
      <link>https://jeremyxu2010.github.io/2019/06/%E6%B8%85%E9%99%A4k8s%E4%BD%BF%E7%94%A8underlay%E7%BD%91%E7%BB%9C%E7%9A%84%E9%9A%9C%E7%A2%8D/</link>
      <pubDate>Sun, 30 Jun 2019 01:35:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/06/%E6%B8%85%E9%99%A4k8s%E4%BD%BF%E7%94%A8underlay%E7%BD%91%E7%BB%9C%E7%9A%84%E9%9A%9C%E7%A2%8D/</guid>
      <description>k8s中使用underlay网络的障碍 上一篇说到在k8s里使用underlay网络有一个弊端，使用了underlay网络的pod无法访问se</description>
    </item>
    
    <item>
      <title>kuberntes中的redis集群性能调优</title>
      <link>https://jeremyxu2010.github.io/2019/06/kuberntes%E4%B8%AD%E7%9A%84redis%E9%9B%86%E7%BE%A4%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/</link>
      <pubDate>Sun, 23 Jun 2019 01:35:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/06/kuberntes%E4%B8%AD%E7%9A%84redis%E9%9B%86%E7%BE%A4%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/</guid>
      <description>上周在kubernetes里发布了一个redis PaaS服务，不过其它同学简单测了一下，虽说功能上没啥问题，但性能相比物理上运行的Redis</description>
    </item>
    
    <item>
      <title>构建基于kubernetes的PaaS服务</title>
      <link>https://jeremyxu2010.github.io/2019/06/%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Ekubernetes%E7%9A%84paas%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Tue, 11 Jun 2019 20:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/06/%E6%9E%84%E5%BB%BA%E5%9F%BA%E4%BA%8Ekubernetes%E7%9A%84paas%E6%9C%8D%E5%8A%A1/</guid>
      <description>工作中需要向外部提供一些诸如MySQL、Redis、MongoDB、Kafka之类的基础PaaS服务。以前每做一个PaaS都要自己去实现工作</description>
    </item>
    
    <item>
      <title>kubernetes中基础服务排障记</title>
      <link>https://jeremyxu2010.github.io/2019/05/kubernetes%E4%B8%AD%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1%E6%8E%92%E9%9A%9C%E8%AE%B0/</link>
      <pubDate>Thu, 30 May 2019 18:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/05/kubernetes%E4%B8%AD%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1%E6%8E%92%E9%9A%9C%E8%AE%B0/</guid>
      <description>工作中需要将原本部署在物理机或虚拟机上的一些基础服务搬到kubernetes中，在搬的过程中遇到了不少坑，这里记录一下。 异常网络引起的问题 之</description>
    </item>
    
    <item>
      <title>MySQL InnoDB Cluster实战</title>
      <link>https://jeremyxu2010.github.io/2019/05/mysql-innodb-cluster%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sun, 26 May 2019 20:14:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/05/mysql-innodb-cluster%E5%AE%9E%E6%88%98/</guid>
      <description>对于MySQL的高可用集群方案，之前在项目实战中使用过简单的主从半同步复制方案、基于Galera的MySQL高可用集群，但总感觉配置太复杂，</description>
    </item>
    
    <item>
      <title>性能测试工具集锦</title>
      <link>https://jeremyxu2010.github.io/2019/05/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/</link>
      <pubDate>Wed, 22 May 2019 11:16:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/05/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/</guid>
      <description>本周的工作中需要对一套部署好的redis集群进行性能测试，在这个过程中用到了几个工具，这里对这些工具的用法记录一下。 sar 我们拿到一台虚拟机，在</description>
    </item>
    
    <item>
      <title>保持Kubernetes容器平台稳定性</title>
      <link>https://jeremyxu2010.github.io/2019/05/%E4%BF%9D%E6%8C%81kubernetes%E5%AE%B9%E5%99%A8%E5%B9%B3%E5%8F%B0%E7%A8%B3%E5%AE%9A%E6%80%A7/</link>
      <pubDate>Tue, 21 May 2019 20:26:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/05/%E4%BF%9D%E6%8C%81kubernetes%E5%AE%B9%E5%99%A8%E5%B9%B3%E5%8F%B0%E7%A8%B3%E5%AE%9A%E6%80%A7/</guid>
      <description>这两天搭建了一套新的kubernetes环境，由于这套环境会被用于演示，所以持续观察了好几天这套环境，发现不少容器平台稳定性的问题，这里记录</description>
    </item>
    
    <item>
      <title>批量处理docker镜像</title>
      <link>https://jeremyxu2010.github.io/2019/05/%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86docker%E9%95%9C%E5%83%8F/</link>
      <pubDate>Sun, 19 May 2019 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/05/%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86docker%E9%95%9C%E5%83%8F/</guid>
      <description>这几天的工作频繁地操作大量docker镜像，这里总结一些过程中的小技巧。 小技巧 列出registry中的镜像 官方的docker registry</description>
    </item>
    
    <item>
      <title>编写Kubernetes Operator</title>
      <link>https://jeremyxu2010.github.io/2019/05/%E7%BC%96%E5%86%99kubernetes-operator/</link>
      <pubDate>Sun, 12 May 2019 10:31:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/05/%E7%BC%96%E5%86%99kubernetes-operator/</guid>
      <description>这周的工作主要是验证几个Kubernetes Operator： mysql-operator redis-operator Redis-Operator percona-server-mongodb-operator 这些operator基本上都是用来部署、管理、维护一些基础服务的。在验</description>
    </item>
    
    <item>
      <title>工作任务项杂记_201904</title>
      <link>https://jeremyxu2010.github.io/2019/05/%E5%B7%A5%E4%BD%9C%E4%BB%BB%E5%8A%A1%E9%A1%B9%E6%9D%82%E8%AE%B0_201904/</link>
      <pubDate>Sat, 04 May 2019 00:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/05/%E5%B7%A5%E4%BD%9C%E4%BB%BB%E5%8A%A1%E9%A1%B9%E6%9D%82%E8%AE%B0_201904/</guid>
      <description>最近的工作比较杂，因此一直没有整理一篇博文。刚好五一假期了，想着不能再拖下去了，即使写出的东西太琐碎，也稍微记录下，作个备忘也挺好的。 spring bo</description>
    </item>
    
    <item>
      <title>巧妙调试docker容器</title>
      <link>https://jeremyxu2010.github.io/2019/04/%E5%B7%A7%E5%A6%99%E8%B0%83%E8%AF%95docker%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Sun, 21 Apr 2019 20:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/04/%E5%B7%A7%E5%A6%99%E8%B0%83%E8%AF%95docker%E5%AE%B9%E5%99%A8/</guid>
      <description>问题 工作中经常发现一些第三方写的docker容器运行有问题，这时我们会通过docker logs命令观察容器的运行日志。很可惜，有时容器中运行</description>
    </item>
    
    <item>
      <title>打通到kubernetes集群的网络</title>
      <link>https://jeremyxu2010.github.io/2019/03/%E6%89%93%E9%80%9A%E5%88%B0kubernetes%E9%9B%86%E7%BE%A4%E7%9A%84%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 31 Mar 2019 21:21:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/03/%E6%89%93%E9%80%9A%E5%88%B0kubernetes%E9%9B%86%E7%BE%A4%E7%9A%84%E7%BD%91%E7%BB%9C/</guid>
      <description>最近在工作中验证istio的网格扩展方案，其中涉及打通网络的需求，也即希望在外部虚拟机可以连通kubernetes集群内部的服务IP、Pod</description>
    </item>
    
    <item>
      <title>使用vagrant搭建验证环境</title>
      <link>https://jeremyxu2010.github.io/2019/03/%E4%BD%BF%E7%94%A8vagrant%E6%90%AD%E5%BB%BA%E9%AA%8C%E8%AF%81%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sun, 24 Mar 2019 10:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/03/%E4%BD%BF%E7%94%A8vagrant%E6%90%AD%E5%BB%BA%E9%AA%8C%E8%AF%81%E7%8E%AF%E5%A2%83/</guid>
      <description>这周的工作需要在一个独立的kubernetes环境调试功能，自然而然地想到在本机装个虚拟机搭建这个环境。不过有同事推荐我试一下vagrant</description>
    </item>
    
    <item>
      <title>PosgreSQL高可用集群实践</title>
      <link>https://jeremyxu2010.github.io/2019/03/posgresql%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Fri, 15 Mar 2019 01:35:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/03/posgresql%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E5%AE%9E%E8%B7%B5/</guid>
      <description>工作中一个第三方软件使用了Posgresql数据库，而在我们的场景里，我们需要保证Posgresql数据库的高可用，网上查找了一下，发现st</description>
    </item>
    
    <item>
      <title>使用哨兵模式部署redis高可用集群</title>
      <link>https://jeremyxu2010.github.io/2019/03/%E4%BD%BF%E7%94%A8%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F%E9%83%A8%E7%BD%B2redis%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Tue, 12 Mar 2019 10:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/03/%E4%BD%BF%E7%94%A8%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F%E9%83%A8%E7%BD%B2redis%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</guid>
      <description>很早以前就听说过redis社区推崇一种哨兵模式的高可用集群部署模式，今天花时间研究了一下，正好记录下来。 哨兵模式 哨兵简介 哨兵模式是在Redi</description>
    </item>
    
    <item>
      <title>运行docker容器遇到的坑</title>
      <link>https://jeremyxu2010.github.io/2019/03/%E8%BF%90%E8%A1%8Cdocker%E5%AE%B9%E5%99%A8%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</link>
      <pubDate>Mon, 11 Mar 2019 00:14:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/03/%E8%BF%90%E8%A1%8Cdocker%E5%AE%B9%E5%99%A8%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</guid>
      <description>今天工作中，需要在本机启动consul、zipkin两个容器，参考docker和zipkin两个镜像的说明，很自然地敲出了以下命令： docker run -d -p</description>
    </item>
    
    <item>
      <title>在线文档电子书化</title>
      <link>https://jeremyxu2010.github.io/2019/03/%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%94%B5%E5%AD%90%E4%B9%A6%E5%8C%96/</link>
      <pubDate>Sun, 10 Mar 2019 22:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/03/%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%94%B5%E5%AD%90%E4%B9%A6%E5%8C%96/</guid>
      <description>在网上看到某技术产品的文档，想把文档弄下来在电子书阅读器上离线看，可发现这个技术文档没有提供pdf等电子书格式，于是想办法自己做一个，这里记</description>
    </item>
    
    <item>
      <title>使用TravisCI做个人博客的自动构建</title>
      <link>https://jeremyxu2010.github.io/2019/03/%E4%BD%BF%E7%94%A8travisci%E5%81%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Sun, 10 Mar 2019 10:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/03/%E4%BD%BF%E7%94%A8travisci%E5%81%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA/</guid>
      <description>今天又有朋友问我，这个博客是怎么搭建的。在回答后，顺便重新申视了下博客的构建部署方式，发现还是有一些改进空间的，刚好今天有点时间，就把它优化</description>
    </item>
    
    <item>
      <title>使用docker in docker</title>
      <link>https://jeremyxu2010.github.io/2019/02/%E4%BD%BF%E7%94%A8docker-in-docker/</link>
      <pubDate>Sun, 24 Feb 2019 19:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/02/%E4%BD%BF%E7%94%A8docker-in-docker/</guid>
      <description>工作中需要在容器里操作docker镜像，而且又不想污染宿主机上的docker镜像，找到了docker in docker(dind)的方案，这里记</description>
    </item>
    
    <item>
      <title>docker日志丢失问题分析</title>
      <link>https://jeremyxu2010.github.io/2019/01/docker%E6%97%A5%E5%BF%97%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 12 Jan 2019 23:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2019/01/docker%E6%97%A5%E5%BF%97%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</guid>
      <description>今天在工作遇到一个docker日志丢失的问题，最终一步步查找到原因了，这里记录一下过程。 问题 工作中把自己写的应用部署到kubernetes中</description>
    </item>
    
    <item>
      <title>编译自定义Python二进制程序</title>
      <link>https://jeremyxu2010.github.io/2018/12/%E7%BC%96%E8%AF%91%E8%87%AA%E5%AE%9A%E4%B9%89python%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Fri, 28 Dec 2018 18:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/12/%E7%BC%96%E8%AF%91%E8%87%AA%E5%AE%9A%E4%B9%89python%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%A8%8B%E5%BA%8F/</guid>
      <description>工作中需要自行编译一个Python二进制程序，并尽量减少该程序依赖的库文件，使之在相同CPU架构上有更良好的可移植性。先找了下网上的资料，都</description>
    </item>
    
    <item>
      <title>SSH的三种端口转发</title>
      <link>https://jeremyxu2010.github.io/2018/12/ssh%E7%9A%84%E4%B8%89%E7%A7%8D%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</link>
      <pubDate>Sat, 15 Dec 2018 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/12/ssh%E7%9A%84%E4%B8%89%E7%A7%8D%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</guid>
      <description>最近工作中经常需要ssh登录到某台跳板机，再连接受限网络环境中的某台服务器。以前经常用SSH端口转发这一功能，但周围的同事好像对这个并不清楚</description>
    </item>
    
    <item>
      <title>arm64硬件架构支持总结</title>
      <link>https://jeremyxu2010.github.io/2018/12/arm64%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%94%AF%E6%8C%81%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 01 Dec 2018 18:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/12/arm64%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%94%AF%E6%8C%81%E6%80%BB%E7%BB%93/</guid>
      <description>自从中兴事件后，国家开始在政策上大力支持国产硬软件，甚至在某些项目投标要求上都加上了隐性条件，软件系统必须能在国产硬软件基础上运行。而国产硬</description>
    </item>
    
    <item>
      <title>使用prometheus监控多k8s集群</title>
      <link>https://jeremyxu2010.github.io/2018/11/%E4%BD%BF%E7%94%A8prometheus%E7%9B%91%E6%8E%A7%E5%A4%9Ak8s%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Sun, 18 Nov 2018 15:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/11/%E4%BD%BF%E7%94%A8prometheus%E7%9B%91%E6%8E%A7%E5%A4%9Ak8s%E9%9B%86%E7%BE%A4/</guid>
      <description>最近在做k8s相关的开发工作，涉及不少k8s的相关知识，这里记录下。 问题引出 遇到一个需求，要使用prometheus监控多个k8s集群。 调研</description>
    </item>
    
    <item>
      <title>追查iptables规则失效原因</title>
      <link>https://jeremyxu2010.github.io/2018/10/%E8%BF%BD%E6%9F%A5iptables%E8%A7%84%E5%88%99%E5%A4%B1%E6%95%88%E5%8E%9F%E5%9B%A0/</link>
      <pubDate>Sat, 13 Oct 2018 22:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/10/%E8%BF%BD%E6%9F%A5iptables%E8%A7%84%E5%88%99%E5%A4%B1%E6%95%88%E5%8E%9F%E5%9B%A0/</guid>
      <description>今天在工作中用到了一条iptables规则，虽然明白这条规则的意思，但结合之前对iptables的理解，想不明白为什么会这么工作，后来仔细研</description>
    </item>
    
    <item>
      <title>docker的两个bug</title>
      <link>https://jeremyxu2010.github.io/2018/10/docker%E7%9A%84%E4%B8%A4%E4%B8%AAbug/</link>
      <pubDate>Sat, 13 Oct 2018 20:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/10/docker%E7%9A%84%E4%B8%A4%E4%B8%AAbug/</guid>
      <description>这几天在工作中使用docker发现了docker的两个bug，这里记录下以备忘。 docker容器生成僵尸进程 现象 公司开发服务器上使用dock</description>
    </item>
    
    <item>
      <title>搭建ELFK日志采集系统</title>
      <link>https://jeremyxu2010.github.io/2018/10/%E6%90%AD%E5%BB%BAelfk%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 13 Oct 2018 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/10/%E6%90%AD%E5%BB%BAelfk%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86%E7%B3%BB%E7%BB%9F/</guid>
      <description>最近的工作涉及搭建一套日志采集系统，采用了业界成熟的ELFK方案，这里将搭建过程记录一下。 环境准备 操作系统信息 系统系统：centos7.2 三</description>
    </item>
    
    <item>
      <title>mongodb高可用集群部署</title>
      <link>https://jeremyxu2010.github.io/2018/10/mongodb%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Sat, 13 Oct 2018 12:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/10/mongodb%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</guid>
      <description>最近比较忙，而且国庆节回了趟老家，各种事情比较多，博客又有一个月没有更新了。这周末有一些时间，所以计划分几篇文章把近一个月技术上的一些实践记</description>
    </item>
    
    <item>
      <title>harbor源码解读</title>
      <link>https://jeremyxu2010.github.io/2018/09/harbor%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</link>
      <pubDate>Mon, 10 Sep 2018 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/09/harbor%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</guid>
      <description>harbor基本上是目前企业级docker registry唯一的开源方案了，之前就有接触，不过一直是当成一个功能丰富的镜像registry来</description>
    </item>
    
    <item>
      <title>k8s中使用cert-manager玩转证书</title>
      <link>https://jeremyxu2010.github.io/2018/08/k8s%E4%B8%AD%E4%BD%BF%E7%94%A8cert-manager%E7%8E%A9%E8%BD%AC%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Sun, 26 Aug 2018 12:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/08/k8s%E4%B8%AD%E4%BD%BF%E7%94%A8cert-manager%E7%8E%A9%E8%BD%AC%E8%AF%81%E4%B9%A6/</guid>
      <description>前几天写过一篇k8s加入TLS安全访问，其中说到用cfssl之类的工具手动生成TLS证书，这样就可以轻松搞定站点的https访问了。理想是很</description>
    </item>
    
    <item>
      <title>搭建k8s的开发调试环境</title>
      <link>https://jeremyxu2010.github.io/2018/08/%E6%90%AD%E5%BB%BAk8s%E7%9A%84%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Tue, 21 Aug 2018 18:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/08/%E6%90%AD%E5%BB%BAk8s%E7%9A%84%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</guid>
      <description>最近准备阅读一下k8s的源码，为了辅助理解代码运行逻辑，顺手搭一个k8s的开发调试环境，后面就可以结合断点调试掌握代码的运行脉络。 准备虚拟机</description>
    </item>
    
    <item>
      <title>mongodb4.0多文档事务尝鲜</title>
      <link>https://jeremyxu2010.github.io/2018/08/mongodb4.0%E5%A4%9A%E6%96%87%E6%A1%A3%E4%BA%8B%E5%8A%A1%E5%B0%9D%E9%B2%9C/</link>
      <pubDate>Sun, 19 Aug 2018 20:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/08/mongodb4.0%E5%A4%9A%E6%96%87%E6%A1%A3%E4%BA%8B%E5%8A%A1%E5%B0%9D%E9%B2%9C/</guid>
      <description>mongodb4.0也出来一段时间了，这个版本最为大众期待的特性就是支持了多文档事务（multi-document transaction），</description>
    </item>
    
    <item>
      <title>servicecomb-saga源码解读</title>
      <link>https://jeremyxu2010.github.io/2018/08/servicecomb-saga%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</link>
      <pubDate>Sat, 18 Aug 2018 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/08/servicecomb-saga%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</guid>
      <description>前面写过一篇servicecomb-saga开发实战，当时说后面有时间写一篇源码解读，不过工作一忙，就把这事儿忘了，今天终于得闲可以补上这个</description>
    </item>
    
    <item>
      <title>k8s加入TLS安全访问</title>
      <link>https://jeremyxu2010.github.io/2018/08/k8s%E5%8A%A0%E5%85%A5tls%E5%AE%89%E5%85%A8%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Sun, 12 Aug 2018 12:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/08/k8s%E5%8A%A0%E5%85%A5tls%E5%AE%89%E5%85%A8%E8%AE%BF%E9%97%AE/</guid>
      <description>以前外部访问k8s里的服务，都是直接以http方式进行的，缺少TLS安全，今天抽空把这块处理一下。 生成并信任自签名证书 首先这里生成自签名的服</description>
    </item>
    
    <item>
      <title>研究监控系统之prometheus</title>
      <link>https://jeremyxu2010.github.io/2018/08/%E7%A0%94%E7%A9%B6%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%B9%8Bprometheus/</link>
      <pubDate>Sun, 05 Aug 2018 12:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/08/%E7%A0%94%E7%A9%B6%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%B9%8Bprometheus/</guid>
      <description>这周的工作是要为已有的系统搭建一套监控系统，主要监控以下指标： 宿主机的CPU、内存使用情况 自身系统的各进程占用CPU、内存使用情况 自身系统本</description>
    </item>
    
    <item>
      <title>研究调用链跟踪技术之jaeger</title>
      <link>https://jeremyxu2010.github.io/2018/07/%E7%A0%94%E7%A9%B6%E8%B0%83%E7%94%A8%E9%93%BE%E8%B7%9F%E8%B8%AA%E6%8A%80%E6%9C%AF%E4%B9%8Bjaeger/</link>
      <pubDate>Sun, 22 Jul 2018 12:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/07/%E7%A0%94%E7%A9%B6%E8%B0%83%E7%94%A8%E9%93%BE%E8%B7%9F%E8%B8%AA%E6%8A%80%E6%9C%AF%E4%B9%8Bjaeger/</guid>
      <description>最近在做微服务构架里有关调用链跟踪（也有叫分布式追踪）的部分，有一些心得，这里总结一些。 为什么有必要跟踪调用链 当我们进行微服务架构开发时，通</description>
    </item>
    
    <item>
      <title>研究consul的service mesh功能</title>
      <link>https://jeremyxu2010.github.io/2018/07/%E7%A0%94%E7%A9%B6consul%E7%9A%84service-mesh%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Fri, 06 Jul 2018 10:53:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/07/%E7%A0%94%E7%A9%B6consul%E7%9A%84service-mesh%E5%8A%9F%E8%83%BD/</guid>
      <description>之前一直是将consul当成一个服务发现、分布式KV服务、服务健康检查服务等，不过前几天consul发布了1.2版本，宣称其实现了Servi</description>
    </item>
    
    <item>
      <title>mongodb的两阶段提交实战</title>
      <link>https://jeremyxu2010.github.io/2018/07/mongodb%E7%9A%84%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%AE%9E%E6%88%98/</link>
      <pubDate>Tue, 03 Jul 2018 20:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/07/mongodb%E7%9A%84%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%AE%9E%E6%88%98/</guid>
      <description>项目中用到了mongodb（3.x版本），业务上需要操作mongodb的多个collections，希望要么同时操作成功，要么回滚操作保持数</description>
    </item>
    
    <item>
      <title>servicecomb-saga开发实战</title>
      <link>https://jeremyxu2010.github.io/2018/07/servicecomb-saga%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</link>
      <pubDate>Mon, 02 Jul 2018 17:50:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/07/servicecomb-saga%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</guid>
      <description>最近的工作主要是微服务框架的设计与开发，期间要解决多个微服务的分布式事务问题，由于要解决的主要场景是用spring boot写的java项目，</description>
    </item>
    
    <item>
      <title>docker实战小结</title>
      <link>https://jeremyxu2010.github.io/2018/06/docker%E5%AE%9E%E6%88%98%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Mon, 18 Jun 2018 23:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/06/docker%E5%AE%9E%E6%88%98%E5%B0%8F%E7%BB%93/</guid>
      <description>好长一段时间没有写博文了，最近的工作主要涉及docker及golang开发，这里输出两篇博文小结一下。 其实以前的工作也涉及过docker，只</description>
    </item>
    
    <item>
      <title>k8s学习记录02</title>
      <link>https://jeremyxu2010.github.io/2018/05/k8s%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9502/</link>
      <pubDate>Mon, 21 May 2018 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/05/k8s%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9502/</guid>
      <description>部署镜像仓库harbor 官方文档中写得很清楚，这里简单概括一下： # 克隆git项目 $ git clone https://github.com/vmware/harbor $ cd harbor/contrib/helm/harbor # Download external dependent charts $ helm dependency update # 编辑部分配置项 $ vim values.yml ...... externalDomain: harbor.local</description>
    </item>
    
    <item>
      <title>consul基础运维-备份还原导入导出</title>
      <link>https://jeremyxu2010.github.io/2018/05/consul%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</link>
      <pubDate>Mon, 21 May 2018 14:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/05/consul%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4-%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</guid>
      <description>本文档目标 工作中要保证生产环境部署的consul的集群能够安全稳定地对外提供服务，即使出现系统故障也能快速恢复，这里将讲述部分的备份还原操作</description>
    </item>
    
    <item>
      <title>k8s学习记录01</title>
      <link>https://jeremyxu2010.github.io/2018/05/k8s%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9501/</link>
      <pubDate>Sun, 20 May 2018 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/05/k8s%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9501/</guid>
      <description>最近在本机macOS安装了开发用的k8s集群之后，花了些时间研究k8s，在这个过程中有一些零零星星的实操技巧，在这里记录一下，这些实际操作技</description>
    </item>
    
    <item>
      <title>consul安全加固</title>
      <link>https://jeremyxu2010.github.io/2018/05/consul%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</link>
      <pubDate>Fri, 18 May 2018 20:15:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/05/consul%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</guid>
      <description>[TOC] 本文档目标 最近的工作需要对默认安装的consul集群进行安全加固，这里将安全加固的步骤记录下来。 consul 术语 首先介绍下在 consul 中会经常见到的术语： n</description>
    </item>
    
    <item>
      <title>基于Docker for macOS的Kubernetes本地环境搭建与应用部署</title>
      <link>https://jeremyxu2010.github.io/2018/05/%E5%9F%BA%E4%BA%8Edocker-for-macos%E7%9A%84kubernetes%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Sat, 05 May 2018 23:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/05/%E5%9F%BA%E4%BA%8Edocker-for-macos%E7%9A%84kubernetes%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/</guid>
      <description>最近的工作跟微服务有关，偶然在网上发现一个用k8s写微服务的小例子，觉得这样写微服务真的好简单，都不用在程序框架层面实现服务注册与服务发现了</description>
    </item>
    
    <item>
      <title>centos下无污染地打rpm包</title>
      <link>https://jeremyxu2010.github.io/2018/04/centos%E4%B8%8B%E6%97%A0%E6%B1%A1%E6%9F%93%E5%9C%B0%E6%89%93rpm%E5%8C%85/</link>
      <pubDate>Sun, 01 Apr 2018 23:45:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/04/centos%E4%B8%8B%E6%97%A0%E6%B1%A1%E6%9F%93%E5%9C%B0%E6%89%93rpm%E5%8C%85/</guid>
      <description>工作中要经常要给centos6, centos7打某应用程序的rpm包。原来安装了两个虚拟机专门干这个工作，但经常会因为打包给系统装上许多没用</description>
    </item>
    
    <item>
      <title>ansible简易入门之playbook</title>
      <link>https://jeremyxu2010.github.io/2018/03/ansible%E7%AE%80%E6%98%93%E5%85%A5%E9%97%A8%E4%B9%8Bplaybook/</link>
      <pubDate>Tue, 20 Mar 2018 22:53:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/03/ansible%E7%AE%80%E6%98%93%E5%85%A5%E9%97%A8%E4%B9%8Bplaybook/</guid>
      <description>Playbooks 简介 Playbooks 与 adhoc 相比,是一种完全不同的运用 ansible 的方式,是非常之强大的. 简单来说,playbooks 是一种简单的配置管理系统与多机器部署系统的基础.</description>
    </item>
    
    <item>
      <title>ansible简易入门</title>
      <link>https://jeremyxu2010.github.io/2018/02/ansible%E7%AE%80%E6%98%93%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 26 Feb 2018 02:53:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/02/ansible%E7%AE%80%E6%98%93%E5%85%A5%E9%97%A8/</guid>
      <description>工作中要使用ansible进行自动化部署，这两天花了点时间看了下ansible的文档，也稍稍体验了下，后面会用于项目实战，这里将实验过程中的</description>
    </item>
    
    <item>
      <title>英文每天金句</title>
      <link>https://jeremyxu2010.github.io/2018/02/%E8%8B%B1%E6%96%87%E6%AF%8F%E5%A4%A9%E9%87%91%E5%8F%A5/</link>
      <pubDate>Sun, 25 Feb 2018 22:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/02/%E8%8B%B1%E6%96%87%E6%AF%8F%E5%A4%A9%E9%87%91%E5%8F%A5/</guid>
      <description>发现欧路词典这款软件每天推送的一句英文挺好的，既文艺又鸡汤，但好像没找到导出的办法，这里将每天的每日一句记录下。 You may be disappointed if you fail, but you are doomed if you don&#39;t</description>
    </item>
    
    <item>
      <title>高可用之keepalived&amp;haproxy</title>
      <link>https://jeremyxu2010.github.io/2018/02/%E9%AB%98%E5%8F%AF%E7%94%A8%E4%B9%8Bkeepalivedhaproxy/</link>
      <pubDate>Sun, 25 Feb 2018 21:27:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/02/%E9%AB%98%E5%8F%AF%E7%94%A8%E4%B9%8Bkeepalivedhaproxy/</guid>
      <description>项目中用到了keepalived及haproxy来实现服务的高可用，防止单点故障。以前其实也用过keepalived及nginx实现类似的功</description>
    </item>
    
    <item>
      <title>MariaDB Galera Cluster部署实战</title>
      <link>https://jeremyxu2010.github.io/2018/02/mariadb-galera-cluster%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sat, 10 Feb 2018 21:45:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/02/mariadb-galera-cluster%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/</guid>
      <description>背景 项目中使用的mariadb+gelera集群模式部署，之前一直用的是mysql的master/slave方式部署数据库的，这种集群模式以</description>
    </item>
    
    <item>
      <title>CentOS6下rpm打包实战</title>
      <link>https://jeremyxu2010.github.io/2018/02/centos6%E4%B8%8Brpm%E6%89%93%E5%8C%85%E5%AE%9E%E6%88%98/</link>
      <pubDate>Tue, 06 Feb 2018 20:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/02/centos6%E4%B8%8Brpm%E6%89%93%E5%8C%85%E5%AE%9E%E6%88%98/</guid>
      <description>最近的工作需要将以前编译安装的软件包打包成rpm包，这里将打包过程记录一下以备忘。 准备rpm打包环境 我这里用的操作系统是CentOS6.7，</description>
    </item>
    
    <item>
      <title>powershell学习备忘</title>
      <link>https://jeremyxu2010.github.io/2018/02/powershell%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sat, 03 Feb 2018 23:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/02/powershell%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</guid>
      <description>背景 早就听说微软的powershell非常强大，凭借它可以全命令行操控windows服务器了。最近终于要在工作中用到它了，于是花了几个小时将</description>
    </item>
    
    <item>
      <title>CentOS7部署k8s集群</title>
      <link>https://jeremyxu2010.github.io/2018/01/centos7%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Sun, 28 Jan 2018 22:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2018/01/centos7%E9%83%A8%E7%BD%B2k8s%E9%9B%86%E7%BE%A4/</guid>
      <description>环境介绍及准备 操作系统采用Centos7.3 64位，细节如下： [root@k8s-master ~]# uname -a Linux k8s-master 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux [root@k8s-master ~]# cat /etc/redhat-release CentOS Linux release 7.2.1511 (Core) 主机信息 本文准备了三台</description>
    </item>
    
    <item>
      <title>写py2、py3兼容的代码</title>
      <link>https://jeremyxu2010.github.io/2017/11/%E5%86%99py2py3%E5%85%BC%E5%AE%B9%E7%9A%84%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sun, 05 Nov 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/11/%E5%86%99py2py3%E5%85%BC%E5%AE%B9%E7%9A%84%E4%BB%A3%E7%A0%81/</guid>
      <description>写py2、py3兼容的代码 用到一段时间python，之前也重点复习了一次python3。但工作中运行环境是python2.7，于是要求写出p</description>
    </item>
    
    <item>
      <title>Java开发小技巧_02</title>
      <link>https://jeremyxu2010.github.io/2017/10/java%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7_02/</link>
      <pubDate>Tue, 24 Oct 2017 21:10:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/java%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7_02/</guid>
      <description>最近阿里发布了一个插件p3c，用于进行Java开发规约的检查扫描。由于插件的代码是开源，于是第一时间也翻查了代码，发现目前实现的检查规则主要</description>
    </item>
    
    <item>
      <title>py3_cookbook_notes_03</title>
      <link>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_03/</link>
      <pubDate>Mon, 23 Oct 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_03/</guid>
      <description>并发编程 启动与停止线程 # Code to execute in an independent thread import time def countdown(n): while n &amp;gt; 0: print(&amp;#39;T-minus&amp;#39;, n) n -= 1 time.sleep(5) # Create and launch a thread from threading import Thread t = Thread(target=countdown, args=(10,)) t.start() if t.is_alive(): print(&amp;#39;Still running&amp;#39;) else: print(&amp;#39;Completed&amp;#39;) t.join() t.daemon=True 如果线程执行一些像I/O这样</description>
    </item>
    
    <item>
      <title>apk反编译步骤</title>
      <link>https://jeremyxu2010.github.io/2017/10/apk%E5%8F%8D%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Mon, 16 Oct 2017 11:16:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/apk%E5%8F%8D%E7%BC%96%E8%AF%91%E6%AD%A5%E9%AA%A4/</guid>
      <description>最近的工作中需要反编译第三方的apk，以也了解对方的签名逻辑，这里将用到的反编译技巧记录一下。 apk文件转成jar文件 首先需要使用工具将ap</description>
    </item>
    
    <item>
      <title>py3_cookbook_notes_02</title>
      <link>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_02/</link>
      <pubDate>Sat, 07 Oct 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_02/</guid>
      <description>最近在看Python Cookbook第三版，将看书过程中一些平时不太容易注意的知识点记录下来。 函数 可接受任意数量参数的函数 def avg(first, *rest): return (first + sum(rest)) / (1</description>
    </item>
    
    <item>
      <title>py3_cookbook_notes_01</title>
      <link>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_01/</link>
      <pubDate>Thu, 05 Oct 2017 12:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/py3_cookbook_notes_01/</guid>
      <description>最近在看Python Cookbook第三版，将看书过程中一些平时不太容易注意的知识点记录下来。 数据结构和算法 解压可迭代对象赋值给多个变量 record =</description>
    </item>
    
    <item>
      <title>数据库事务备忘</title>
      <link>https://jeremyxu2010.github.io/2017/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sun, 01 Oct 2017 23:36:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E5%A4%87%E5%BF%98/</guid>
      <description>数据库事务备忘 以前对数据库事务的隔离级别概念不是很清楚，今天看到一篇文章，将这个事情讲得比较清楚，这里记录一下。 数据库事务的特性 原子性（At</description>
    </item>
    
    <item>
      <title>Java VisualVM使用备忘</title>
      <link>https://jeremyxu2010.github.io/2017/10/java-visualvm%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sun, 01 Oct 2017 11:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/10/java-visualvm%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</guid>
      <description>Java VisualVM使用备忘 一直觉得JDK带的新版诊断工具VisualVM功能都没有原来的jconsole强大，今天偶然翻到了VisualVM</description>
    </item>
    
    <item>
      <title>python开发小技巧</title>
      <link>https://jeremyxu2010.github.io/2017/09/python%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 30 Sep 2017 22:12:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/09/python%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>python开发小技巧 今天在工作中写了一个python脚本从数据库中导数据，其中用到了一些技巧，在这里记录一下。 判断字符串仅包含英文 直接通过</description>
    </item>
    
    <item>
      <title>疑难问题之bsdiff</title>
      <link>https://jeremyxu2010.github.io/2017/09/%E7%96%91%E9%9A%BE%E9%97%AE%E9%A2%98%E4%B9%8Bbsdiff/</link>
      <pubDate>Mon, 18 Sep 2017 22:17:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/09/%E7%96%91%E9%9A%BE%E9%97%AE%E9%A2%98%E4%B9%8Bbsdiff/</guid>
      <description>疑难问题之bsdiff 问题背景 项目中使用到了bsdiff命令进行增量包的生成，不过在使用中发现对于某些文件，bsdiff命令会卡住。 诊断问题</description>
    </item>
    
    <item>
      <title>Spring Boot学习备忘</title>
      <link>https://jeremyxu2010.github.io/2017/09/spring-boot%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</link>
      <pubDate>Mon, 18 Sep 2017 00:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/09/spring-boot%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</guid>
      <description>Spring Boot学习备忘 Spring Boot简化了基于Spring的应用开发，只需要&amp;quot;run&amp;quot;就能创建一个独立的，产品级别的Spring</description>
    </item>
    
    <item>
      <title>Gearman使用范例</title>
      <link>https://jeremyxu2010.github.io/2017/09/gearman%E4%BD%BF%E7%94%A8%E8%8C%83%E4%BE%8B/</link>
      <pubDate>Wed, 06 Sep 2017 03:14:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/09/gearman%E4%BD%BF%E7%94%A8%E8%8C%83%E4%BE%8B/</guid>
      <description>Gearman使用范例 Gearman是一个分发任务的程序框架，可以用在各种场合，与Hadoop相比，Gearman更偏向于任务分发功能。它的</description>
    </item>
    
    <item>
      <title>Java开发小技巧</title>
      <link>https://jeremyxu2010.github.io/2017/09/java%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sun, 03 Sep 2017 23:38:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/09/java%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>Java开发小技巧 平时开发中有一些小技巧，都不算很有技术含量，但在工作中运用这些技巧确实可以提高工作效率，这里把这些小技分享出来。 参数验证 提</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记08</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B008/</link>
      <pubDate>Fri, 16 Jun 2017 22:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B008/</guid>
      <description>核（Kernels） SVM算法的原理如下： $$ min \frac 1 2 ||w||^2 \\ s. t. y^{(i)}(W^TX^{(i)} + b) &amp;gt;= 1 $$ 上述式子的对偶问题如下： $$ max\sum_i\alpha_i - \frac 1 2 \sum_i \sum_j y^{(i)}y^{(j)} \alpha_i \alpha_j &amp;lt;X^{(i)}, X^{(j)}&amp;gt; \\ s. t. \alpha_i&amp;gt;=0, \sum_iy_i\alpha_i=0 \\ W = \sum_i\alpha_iy^{(i)}X^{(i)}</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记07</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B007/</link>
      <pubDate>Fri, 16 Jun 2017 21:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B007/</guid>
      <description>自己的数学知识丢太久了，这一课看了好几篇，最后结合视频及网上的分析文档终于看懂了，汗。。。 最优间隔分类器(optimal margin classifier) 如果训练集是线性</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记06</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B006/</link>
      <pubDate>Fri, 16 Jun 2017 19:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B006/</guid>
      <description>多项式事件模型 面的这种基本的朴素贝叶斯模型叫做多元伯努利事件模型，该模型有多种扩展，一种是每个分量的多值化，即将$P(X_i|y)$由伯努利</description>
    </item>
    
    <item>
      <title>Retrying_Library_For_Java</title>
      <link>https://jeremyxu2010.github.io/2017/06/retrying_library_for_java/</link>
      <pubDate>Thu, 15 Jun 2017 00:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/retrying_library_for_java/</guid>
      <description>最近在github上看到一个得了不少星的项目Retrying library for Python，果然还是人家比较有想法，这些重试的逻辑是可以包装为一个库供别人</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记05</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B005/</link>
      <pubDate>Mon, 12 Jun 2017 15:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B005/</guid>
      <description>生成学习算法 logistic回归的执行过程就是要搜索这样的一条直线，能够将两类数据分隔开。 判别学习算法描述为以下公式： $$ Learns \quad P(y|X) \quad or \quad learns \quad h_\Theta(X) \in</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记04</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B004/</link>
      <pubDate>Sun, 04 Jun 2017 22:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B004/</guid>
      <description>牛顿方法 首先假设存在一个函数$f(\Theta)$，然后算法的目标是找到一个$\Theta$，使得$f(\Theta)=0$。 牛顿方法的一次</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记03</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B003/</link>
      <pubDate>Sun, 04 Jun 2017 04:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B003/</guid>
      <description>局部加权回归 线性回归算法里的成本函数： $J(\Theta) = \frac 1 2 \sum_{i=1}^m(h_\Theta(X^{(i)})-y^{(i)})^2$ 正规方程解出的参数解析表达式： $\Theta = (X^TX)^{-1}X^Ty$ 由于使用了过小的特征集合使得模型过于简单，在这种情形下</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记02</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B002/</link>
      <pubDate>Sat, 03 Jun 2017 22:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B002/</guid>
      <description>线性回归 首先展示了一段视频，介绍了Dean Pomerleau利用监督学习让一辆汽车可以自动行驶。 使用的符号 符号 代表的含义 m 训练样本的数目 X 输</description>
    </item>
    
    <item>
      <title>机器学习课程_笔记01</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B001/</link>
      <pubDate>Sat, 03 Jun 2017 19:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B_%E7%AC%94%E8%AE%B001/</guid>
      <description>最近放了一个长假，计划系统地学习下机器学习的基本知识，途径主要是看andrew ng大牛的斯坦福大学公开课-机器学习课程视频，当然在看的过程中</description>
    </item>
    
    <item>
      <title>使用mathjax</title>
      <link>https://jeremyxu2010.github.io/2017/06/%E4%BD%BF%E7%94%A8mathjax/</link>
      <pubDate>Sat, 03 Jun 2017 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/06/%E4%BD%BF%E7%94%A8mathjax/</guid>
      <description>为何要用mathjax 在书写数值计算类文章，特别是机器学习相关算法时，难免需要插入复杂的数学公式。一种是用图片在网页上展示，另外一种是使用 MathJax</description>
    </item>
    
    <item>
      <title>使用keras破解验证码</title>
      <link>https://jeremyxu2010.github.io/2017/05/%E4%BD%BF%E7%94%A8keras%E7%A0%B4%E8%A7%A3%E9%AA%8C%E8%AF%81%E7%A0%81/</link>
      <pubDate>Sun, 07 May 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/05/%E4%BD%BF%E7%94%A8keras%E7%A0%B4%E8%A7%A3%E9%AA%8C%E8%AF%81%E7%A0%81/</guid>
      <description>今天做一个业务功能时，需要自动登录第三方系统，虽然第三方系统已经给我方分配了用户名及密码，但登录时必须必须输入验证码，如此就很难做到自动化登</description>
    </item>
    
    <item>
      <title>开发小技巧备忘</title>
      <link>https://jeremyxu2010.github.io/2017/04/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%A4%87%E5%BF%98/</link>
      <pubDate>Mon, 24 Apr 2017 20:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/04/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%A4%87%E5%BF%98/</guid>
      <description>今天一段时间一直在忙工作上的事，并没有系统地学习研究某一个具体的问题，但回顾这一个月的工作，发现还是有一些经验可以记录一下的。但这些经验没法</description>
    </item>
    
    <item>
      <title>编写mybatis-generator插件</title>
      <link>https://jeremyxu2010.github.io/2017/03/%E7%BC%96%E5%86%99mybatis-generator%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 20 Mar 2017 20:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/%E7%BC%96%E5%86%99mybatis-generator%E6%8F%92%E4%BB%B6/</guid>
      <description>背景 今天在用mybatis写一些单表查询操作业务逻辑时，发现一个简单的查询至少要写三行，如下所示： DemoCriteria criteria = new DemoCriteria(); criteria.createCriteria().andFiled1EqualTo(filed1Value); List&amp;lt;Demo&amp;gt; demos = demoMapper.selectByCriteria(criteria); 这样写很累啊，于是想了</description>
    </item>
    
    <item>
      <title>tensorflow学习笔记_03</title>
      <link>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_03/</link>
      <pubDate>Sun, 19 Mar 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_03/</guid>
      <description>上一篇使用tensorflow完成一个卷积神经网络，但当时写的代码虽然可以工作，还比较零乱，并且并没有经过参数调优，最终得到的模型准确率也并</description>
    </item>
    
    <item>
      <title>使用snownlp进行评论情感分析</title>
      <link>https://jeremyxu2010.github.io/2017/03/%E4%BD%BF%E7%94%A8snownlp%E8%BF%9B%E8%A1%8C%E8%AF%84%E8%AE%BA%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 16 Mar 2017 20:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/%E4%BD%BF%E7%94%A8snownlp%E8%BF%9B%E8%A1%8C%E8%AF%84%E8%AE%BA%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90/</guid>
      <description>背景 最近项目中有一个需求，希望分析用户对某些商品的评论，以推测用户对这些商品的情感倾向，从而为运营人员管理这些商品提供依据。 这个问题属于自然</description>
    </item>
    
    <item>
      <title>前端ReactJS技术介绍</title>
      <link>https://jeremyxu2010.github.io/2017/03/%E5%89%8D%E7%AB%AFreactjs%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 09 Mar 2017 18:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/%E5%89%8D%E7%AB%AFreactjs%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/</guid>
      <description>WEB应用程序基本架构 胖服务端 这个架构的特点： 后台良好的分层模型 页面由后台输出至浏览器，一般采用JSP、PHP等动态页面技术处理页面的动态内</description>
    </item>
    
    <item>
      <title>mybatis-generator使用备忘</title>
      <link>https://jeremyxu2010.github.io/2017/03/mybatis-generator%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sun, 05 Mar 2017 23:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/mybatis-generator%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</guid>
      <description>最近要做一个新的项目，项目涉及的业务还比较复杂，表相当多。项目使用的技术框架为SSM。于是决定使用mybatis-generator来生成D</description>
    </item>
    
    <item>
      <title>tensorflow学习笔记_02</title>
      <link>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02/</link>
      <pubDate>Thu, 02 Mar 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/03/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_02/</guid>
      <description>上一篇笔记采用一个线性关系的神经层处理了MNIST的训练数据，最后得到一个准确率一般的神经网络。但其实对于这种图像识别的场景，tensorf</description>
    </item>
    
    <item>
      <title>tensorflow学习笔记_01</title>
      <link>https://jeremyxu2010.github.io/2017/02/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/</link>
      <pubDate>Tue, 28 Feb 2017 18:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_01/</guid>
      <description>最近看到一个有趣的项目pix2pix-tensorflow。大概功能是用户在网页上画一只猫的轮廓，然后它就可以输出与这个轮廓很相似的猫的清晰</description>
    </item>
    
    <item>
      <title>采用go编写小工具</title>
      <link>https://jeremyxu2010.github.io/2017/02/%E9%87%87%E7%94%A8go%E7%BC%96%E5%86%99%E5%B0%8F%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 22 Feb 2017 11:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/%E9%87%87%E7%94%A8go%E7%BC%96%E5%86%99%E5%B0%8F%E5%B7%A5%E5%85%B7/</guid>
      <description>前段时间换了个环境写代码，但公司由于信息安全限制，要求大部分人员使用windows系统，于是我只能硬着头皮用windows。用windows</description>
    </item>
    
    <item>
      <title>修复hexo涉及中文的302问题</title>
      <link>https://jeremyxu2010.github.io/2017/02/%E4%BF%AE%E5%A4%8Dhexo%E6%B6%89%E5%8F%8A%E4%B8%AD%E6%96%87%E7%9A%84302%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 17 Feb 2017 20:26:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/%E4%BF%AE%E5%A4%8Dhexo%E6%B6%89%E5%8F%8A%E4%B8%AD%E6%96%87%E7%9A%84302%E9%97%AE%E9%A2%98/</guid>
      <description>今天在用hexo写博文时遇到一个涉及中文的302问题，记录一下。 当访问链接为http://middle3.dev.vivo.xyz:4000</description>
    </item>
    
    <item>
      <title>hibernate查询的一些优化写法</title>
      <link>https://jeremyxu2010.github.io/2017/02/hibernate%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96%E5%86%99%E6%B3%95/</link>
      <pubDate>Mon, 13 Feb 2017 20:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/hibernate%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96%E5%86%99%E6%B3%95/</guid>
      <description>项目中使用hibernate进行数据库查询，但由于项目历时较长，经手的人较多，DAO层的代码风格很不致，这里将一些常见的场景进行归纳，并给出</description>
    </item>
    
    <item>
      <title>两种获取hibernate会话的区别</title>
      <link>https://jeremyxu2010.github.io/2017/02/%E4%B8%A4%E7%A7%8D%E8%8E%B7%E5%8F%96hibernate%E4%BC%9A%E8%AF%9D%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 09 Feb 2017 20:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/%E4%B8%A4%E7%A7%8D%E8%8E%B7%E5%8F%96hibernate%E4%BC%9A%E8%AF%9D%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>今天在工作中，发现用Hibernate实现的DAO类中存在两种获取hibernate会话的方式，如下： @Repository(&amp;#34;demoDao&amp;#34;) public class DemoDaoImpl extends HibernateDaoSupport implements DemoDao{ //通过getSess</description>
    </item>
    
    <item>
      <title>记录解决几个前端小问题的过程</title>
      <link>https://jeremyxu2010.github.io/2017/02/%E8%AE%B0%E5%BD%95%E8%A7%A3%E5%86%B3%E5%87%A0%E4%B8%AA%E5%89%8D%E7%AB%AF%E5%B0%8F%E9%97%AE%E9%A2%98%E7%9A%84%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Wed, 08 Feb 2017 21:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/%E8%AE%B0%E5%BD%95%E8%A7%A3%E5%86%B3%E5%87%A0%E4%B8%AA%E5%89%8D%E7%AB%AF%E5%B0%8F%E9%97%AE%E9%A2%98%E7%9A%84%E8%BF%87%E7%A8%8B/</guid>
      <description>今天的主要工作都在用react.js写一些前端界面，中间遇到了一些问题，这里解决这些问题的过程记录一下。 使用echarts图表组件 由于项目比</description>
    </item>
    
    <item>
      <title>使用go开发api服务</title>
      <link>https://jeremyxu2010.github.io/2017/02/%E4%BD%BF%E7%94%A8go%E5%BC%80%E5%8F%91api%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Sat, 04 Feb 2017 19:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/%E4%BD%BF%E7%94%A8go%E5%BC%80%E5%8F%91api%E6%9C%8D%E5%8A%A1/</guid>
      <description>看到有人用go语言开发api服务，分发打包的程序只需要分发一个可执行文件就可以了，真的好方便，于是我也来试一试。 依赖管理 go语言的第三方包依</description>
    </item>
    
    <item>
      <title>docker排雷记</title>
      <link>https://jeremyxu2010.github.io/2017/02/docker%E6%8E%92%E9%9B%B7%E8%AE%B0/</link>
      <pubDate>Fri, 03 Feb 2017 20:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/02/docker%E6%8E%92%E9%9B%B7%E8%AE%B0/</guid>
      <description>上周末使用docker做了一个简化应用分发的小例子，但今天在最新版本的docker上一运行就出错，研究了好半天，终于将这些坑都填过去了，这里</description>
    </item>
    
    <item>
      <title>boot2docker中安装docker-compose</title>
      <link>https://jeremyxu2010.github.io/2017/01/boot2docker%E4%B8%AD%E5%AE%89%E8%A3%85docker-compose/</link>
      <pubDate>Sun, 29 Jan 2017 02:20:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/01/boot2docker%E4%B8%AD%E5%AE%89%E8%A3%85docker-compose/</guid>
      <description>boot2docker中未安装docker-compose，同时无法自动挂载我在宿主机上共享的目录。研究了下，终于找到办法了，记录如下： sudo mkdir</description>
    </item>
    
    <item>
      <title>分发JavaWeb项目之docker方案</title>
      <link>https://jeremyxu2010.github.io/2017/01/%E5%88%86%E5%8F%91javaweb%E9%A1%B9%E7%9B%AE%E4%B9%8Bdocker%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 28 Jan 2017 23:08:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/01/%E5%88%86%E5%8F%91javaweb%E9%A1%B9%E7%9B%AE%E4%B9%8Bdocker%E6%96%B9%E6%A1%88/</guid>
      <description>最近做了个小的Java Web脚手架工程。工程项目虽小，但算是一个很典型的Java Web项目，依赖于数据库，Java写的后端代码，JavaSc</description>
    </item>
    
    <item>
      <title>webpack的watch选项不工作原因分析</title>
      <link>https://jeremyxu2010.github.io/2017/01/webpack%E7%9A%84watch%E9%80%89%E9%A1%B9%E4%B8%8D%E5%B7%A5%E4%BD%9C%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 26 Jan 2017 16:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/01/webpack%E7%9A%84watch%E9%80%89%E9%A1%B9%E4%B8%8D%E5%B7%A5%E4%BD%9C%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/</guid>
      <description>今天尝试将以前创建的一个前端项目改为webpack编译，该项目使用了VueJS v2.0，原来是编写gulp脚本完成构建的。很自然就直接用vu</description>
    </item>
    
    <item>
      <title>使用create-react-app简化前端项目的建立</title>
      <link>https://jeremyxu2010.github.io/2017/01/%E4%BD%BF%E7%94%A8create-react-app%E7%AE%80%E5%8C%96%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%BB%BA%E7%AB%8B/</link>
      <pubDate>Wed, 25 Jan 2017 18:30:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/01/%E4%BD%BF%E7%94%A8create-react-app%E7%AE%80%E5%8C%96%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%BB%BA%E7%AB%8B/</guid>
      <description>以往启动一个Web项目，总要从一个现存的项目将gulpfile.js, package.json拷贝至新项目，然后根据需要修改这两个文件，确实</description>
    </item>
    
    <item>
      <title>Hibernate里使用SQLQuery</title>
      <link>https://jeremyxu2010.github.io/2017/01/hibernate%E9%87%8C%E4%BD%BF%E7%94%A8sqlquery/</link>
      <pubDate>Fri, 20 Jan 2017 20:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/01/hibernate%E9%87%8C%E4%BD%BF%E7%94%A8sqlquery/</guid>
      <description>最近在做一个老旧项目，项目后台使用了hibernate。以前虽说也用过hibernate，但用得不够深入，一般最多两个表关联查询一下，比较简</description>
    </item>
    
    <item>
      <title>使用hexo写博文</title>
      <link>https://jeremyxu2010.github.io/2017/01/%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E6%96%87/</link>
      <pubDate>Sun, 15 Jan 2017 22:54:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/01/%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E6%96%87/</guid>
      <description>来到一个新的环境，发现周围好多同事都是用word写技术文档的，觉得有必要将markdown这么好的东西介绍给大家。同时为了方便各位技术同仁写</description>
    </item>
    
    <item>
      <title>免编译在JSP中直接写react代码</title>
      <link>https://jeremyxu2010.github.io/2017/01/%E5%85%8D%E7%BC%96%E8%AF%91%E5%9C%A8jsp%E4%B8%AD%E7%9B%B4%E6%8E%A5%E5%86%99react%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 07 Jan 2017 20:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2017/01/%E5%85%8D%E7%BC%96%E8%AF%91%E5%9C%A8jsp%E4%B8%AD%E7%9B%B4%E6%8E%A5%E5%86%99react%E4%BB%A3%E7%A0%81/</guid>
      <description>最近参与了一个历时4-5年的项目，项目是一个后台管理系统，访问量并不高，但经常根据业务方的一些特殊需求，在原有代码添加功能。项目所采用的技术</description>
    </item>
    
    <item>
      <title>gulp替换webpack</title>
      <link>https://jeremyxu2010.github.io/2016/12/gulp%E6%9B%BF%E6%8D%A2webpack/</link>
      <pubDate>Fri, 16 Dec 2016 17:08:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/12/gulp%E6%9B%BF%E6%8D%A2webpack/</guid>
      <description>之前项目中使用的webpack进行前端代码的编译，但一直不太喜欢webpack的那种玩法。使用webpack编写编译脚本时就是按webpac</description>
    </item>
    
    <item>
      <title>解决zookeeper导致tomcat停止时报异常的问题</title>
      <link>https://jeremyxu2010.github.io/2016/12/%E8%A7%A3%E5%86%B3zookeeper%E5%AF%BC%E8%87%B4tomcat%E5%81%9C%E6%AD%A2%E6%97%B6%E6%8A%A5%E5%BC%82%E5%B8%B8%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 09 Dec 2016 12:09:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/12/%E8%A7%A3%E5%86%B3zookeeper%E5%AF%BC%E8%87%B4tomcat%E5%81%9C%E6%AD%A2%E6%97%B6%E6%8A%A5%E5%BC%82%E5%B8%B8%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>问题由来 今天运行工程时，发现停止tomcat时，发现控制台会报一些错误。 十二月 09, 2016 9:25:14 上午 org.apache.coyote.AbstractProtocol stop 信息: Stopping ProtocolHandler [&amp;quot;http-apr-8080&amp;quot;] 十二月 09, 2016 9:25:14 上午 org.apache.catalina.loader.WebappClassLoaderBase loadClass 信息: Illegal access: this web application</description>
    </item>
    
    <item>
      <title>解决dubbo导致tomcat无法优雅shutdown的问题</title>
      <link>https://jeremyxu2010.github.io/2016/12/%E8%A7%A3%E5%86%B3dubbo%E5%AF%BC%E8%87%B4tomcat%E6%97%A0%E6%B3%95%E4%BC%98%E9%9B%85shutdown%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 09 Dec 2016 12:02:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/12/%E8%A7%A3%E5%86%B3dubbo%E5%AF%BC%E8%87%B4tomcat%E6%97%A0%E6%B3%95%E4%BC%98%E9%9B%85shutdown%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>问题由来 今天运行工程时，发现停止tomcat时，java进程并不会退出，而是必须kill -9杀掉tomcat进程。 问题出现时将线程dump出</description>
    </item>
    
    <item>
      <title>dubbo起步</title>
      <link>https://jeremyxu2010.github.io/2016/12/dubbo%E8%B5%B7%E6%AD%A5/</link>
      <pubDate>Mon, 05 Dec 2016 19:58:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/12/dubbo%E8%B5%B7%E6%AD%A5/</guid>
      <description>之前在项目中使用过dubbo，但很久没有再用，以致都忘了它的用法，今天看到当当网开源的一个项目dubbox, 觉得挺实用的。这里先将dubbo</description>
    </item>
    
    <item>
      <title>redis研究</title>
      <link>https://jeremyxu2010.github.io/2016/11/redis%E7%A0%94%E7%A9%B6/</link>
      <pubDate>Sun, 13 Nov 2016 01:18:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/11/redis%E7%A0%94%E7%A9%B6/</guid>
      <description>最近看了本书《Redis中文文档》，这本书写得挺好，讲了Redis的方方面面，在这里记录一下以备忘。 相关概念 键空间通知 这个用得比较少，暂时不</description>
    </item>
    
    <item>
      <title>给tomcat7配置SSL证书</title>
      <link>https://jeremyxu2010.github.io/2016/11/%E7%BB%99tomcat7%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Mon, 07 Nov 2016 22:31:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/11/%E7%BB%99tomcat7%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6/</guid>
      <description>今天工作中需要给tomcat7配置SSL证书，以使用https访问tomcat服务。以前都是自签名，照着网上的文档完成的，这回有一点不同的是</description>
    </item>
    
    <item>
      <title>SSM项目脚手架</title>
      <link>https://jeremyxu2010.github.io/2016/11/ssm%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6/</link>
      <pubDate>Sun, 06 Nov 2016 00:09:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/11/ssm%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6/</guid>
      <description>使用SSM做了好几个项目，今天突然想起来还是建一个脚手架工程，地址在这里，便于以后快速创建这类项目。 SSM项目脚手架项目 在网上找到一个ssm</description>
    </item>
    
    <item>
      <title>maven阿里云仓库镜像</title>
      <link>https://jeremyxu2010.github.io/2016/10/maven%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%93%E5%BA%93%E9%95%9C%E5%83%8F/</link>
      <pubDate>Mon, 31 Oct 2016 02:05:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/maven%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%93%E5%BA%93%E9%95%9C%E5%83%8F/</guid>
      <description>自从国内的oschina maven仓库镜像停止服务后，一直找不到稳定且速度快的maven仓库镜像，网上搜来搜去，都是说http://mirr</description>
    </item>
    
    <item>
      <title>netty3与netty4的区别</title>
      <link>https://jeremyxu2010.github.io/2016/10/netty3%E4%B8%8Enetty4%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Mon, 31 Oct 2016 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/netty3%E4%B8%8Enetty4%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>今天遇到一个人问我netty3与netty4有什么区别。因为我之前使用netty做过网络程序开发，心里还是有点谱的。很自然地就说到了一些主要</description>
    </item>
    
    <item>
      <title>InnoDB与MyISAM的区别</title>
      <link>https://jeremyxu2010.github.io/2016/10/innodb%E4%B8%8Emyisam%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 28 Oct 2016 23:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/innodb%E4%B8%8Emyisam%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>今天被人问到InnoDB与MyISAM的区别，突然发现虽然平时做项目时经常时经常用到这两种存储引擎，但却只知道两者在事务支持方面的区别，其它</description>
    </item>
    
    <item>
      <title>使用kcptun加速翻墙</title>
      <link>https://jeremyxu2010.github.io/2016/10/%E4%BD%BF%E7%94%A8kcptun%E5%8A%A0%E9%80%9F%E7%BF%BB%E5%A2%99/</link>
      <pubDate>Tue, 25 Oct 2016 00:59:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/%E4%BD%BF%E7%94%A8kcptun%E5%8A%A0%E9%80%9F%E7%BF%BB%E5%A2%99/</guid>
      <description>之前有一篇博文里写到了如何使用shadowsocks翻墙，可最近感觉这种翻墙方案网络延迟大了很多。最让人难以接受的是每次在Google页面里</description>
    </item>
    
    <item>
      <title>《Network Programming with Go》阅读重点备忘（二）</title>
      <link>https://jeremyxu2010.github.io/2016/10/network-programming-with-go%E9%98%85%E8%AF%BB%E9%87%8D%E7%82%B9%E5%A4%87%E5%BF%98%E4%BA%8C/</link>
      <pubDate>Tue, 25 Oct 2016 00:14:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/network-programming-with-go%E9%98%85%E8%AF%BB%E9%87%8D%E7%82%B9%E5%A4%87%E5%BF%98%E4%BA%8C/</guid>
      <description>接上一篇博文，这里是我阅读电子书《Network Programming with Go》后，书中一些重点的第二部分。 HTTP 第8章主要讲到了golang中对HTTP的支持。 首先</description>
    </item>
    
    <item>
      <title>《Network Programming with Go》阅读重点备忘（一）</title>
      <link>https://jeremyxu2010.github.io/2016/10/network-programming-with-go%E9%98%85%E8%AF%BB%E9%87%8D%E7%82%B9%E5%A4%87%E5%BF%98%E4%B8%80/</link>
      <pubDate>Mon, 24 Oct 2016 00:42:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/network-programming-with-go%E9%98%85%E8%AF%BB%E9%87%8D%E7%82%B9%E5%A4%87%E5%BF%98%E4%B8%80/</guid>
      <description>最近读了一本老外写的电子书《Network Programming with Go》，感觉写得还可以，在这里将书中一些重点记录一下以备忘。 架构 跟其它书不同，这本书的第一章主</description>
    </item>
    
    <item>
      <title>React0.13在Chrome54上抽风问题总结</title>
      <link>https://jeremyxu2010.github.io/2016/10/react0.13%E5%9C%A8chrome54%E4%B8%8A%E6%8A%BD%E9%A3%8E%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 20 Oct 2016 00:35:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/react0.13%E5%9C%A8chrome54%E4%B8%8A%E6%8A%BD%E9%A3%8E%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid>
      <description>这几天产品处在发版阶段，工作比较忙，很久没有更新博客了。不过今天在工作中遇到一个最新版Chrome浏览器的坑，分析解决的过程还比较有意思，在</description>
    </item>
    
    <item>
      <title>docker源码分析-Daemon创建及启动</title>
      <link>https://jeremyxu2010.github.io/2016/10/docker%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-daemon%E5%88%9B%E5%BB%BA%E5%8F%8A%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Thu, 06 Oct 2016 04:22:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/docker%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-daemon%E5%88%9B%E5%BB%BA%E5%8F%8A%E5%90%AF%E5%8A%A8/</guid>
      <description>上一篇分析了Docker Client的源码运行逻辑，本篇接着分析Docker Daemon的运行逻辑。Docker Daemon的运行逻辑很复杂</description>
    </item>
    
    <item>
      <title>docker源码分析-Client创建与命令执行</title>
      <link>https://jeremyxu2010.github.io/2016/10/docker%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-client%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Wed, 05 Oct 2016 15:38:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/docker%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-client%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</guid>
      <description>一直在研究docker，最近被人问到docker到底是怎么工作的却不是太清楚，在网上偶然看到一本讲docker源码的电子书，花了整晚看了下，</description>
    </item>
    
    <item>
      <title>golang语言常见范式</title>
      <link>https://jeremyxu2010.github.io/2016/10/golang%E8%AF%AD%E8%A8%80%E5%B8%B8%E8%A7%81%E8%8C%83%E5%BC%8F/</link>
      <pubDate>Sun, 02 Oct 2016 18:47:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/10/golang%E8%AF%AD%E8%A8%80%E5%B8%B8%E8%A7%81%E8%8C%83%E5%BC%8F/</guid>
      <description>最近花了一个星期的时间看完了《Go语言程序设计》这本书，这本书不愧是大师的作品，写得很好。看过之后对golang语言的理解更深刻了。下面将书</description>
    </item>
    
    <item>
      <title>golang开发环境搭建</title>
      <link>https://jeremyxu2010.github.io/2016/09/golang%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sun, 25 Sep 2016 23:37:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/golang%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>之前项目中使用go写过不少命令行工具，这些命令行工具主要进行网络扫描任务。很可惜当时并没有留下任何记录，今天突然想起这个事，觉得还是有必要将</description>
    </item>
    
    <item>
      <title>微信小程序上手</title>
      <link>https://jeremyxu2010.github.io/2016/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8A%E6%89%8B/</link>
      <pubDate>Sat, 24 Sep 2016 00:44:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8A%E6%89%8B/</guid>
      <description>这两天移动互联网领域发生了一件大事，微信发布了小程序，然后网上突然涌出了诸多教程，貌似大家对微信小程序的功能与想象空间兴奋不已，我免不了俗，</description>
    </item>
    
    <item>
      <title>利用promise实现简单的前端cache</title>
      <link>https://jeremyxu2010.github.io/2016/09/%E5%88%A9%E7%94%A8promise%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%89%8D%E7%AB%AFcache/</link>
      <pubDate>Thu, 22 Sep 2016 22:51:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/%E5%88%A9%E7%94%A8promise%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%89%8D%E7%AB%AFcache/</guid>
      <description>今天在工作中遇到一个关于promise有趣的小问题，这里分享一下分析的过程。 原始版本 //这个方法模拟从服务端加载数据 var loadData = function(){ return fetch(&amp;#39;/&amp;#39;).then(function(data){ return data.statusText }); }; loadData().then(function(data){ console.log(data);</description>
    </item>
    
    <item>
      <title>快速创建KVM虚拟机</title>
      <link>https://jeremyxu2010.github.io/2016/09/%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAkvm%E8%99%9A%E6%8B%9F%E6%9C%BA/</link>
      <pubDate>Wed, 21 Sep 2016 23:21:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAkvm%E8%99%9A%E6%8B%9F%E6%9C%BA/</guid>
      <description>以前写到一篇文章制作CentOS6基础镜像，今天在工作中突然要临时创建很多虚拟机，于是结合那篇文章得到的基础镜像，写了个简单的脚本快速创建K</description>
    </item>
    
    <item>
      <title>TCP细节分析</title>
      <link>https://jeremyxu2010.github.io/2016/09/tcp%E7%BB%86%E8%8A%82%E5%88%86%E6%9E%90/</link>
      <pubDate>Tue, 20 Sep 2016 23:44:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/tcp%E7%BB%86%E8%8A%82%E5%88%86%E6%9E%90/</guid>
      <description>昨天阅读一篇讲tcpdump使用技巧的文章，里面简单提到了TCP握手挥手的流程，还附了一片图片。 虽然TCP握手挥手大学里学到，但很惭愧竟忘得</description>
    </item>
    
    <item>
      <title>tcpdump使用技巧（转载）</title>
      <link>https://jeremyxu2010.github.io/2016/09/tcpdump%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E8%BD%AC%E8%BD%BD/</link>
      <pubDate>Mon, 19 Sep 2016 23:54:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/tcpdump%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E8%BD%AC%E8%BD%BD/</guid>
      <description>很早就用过Wireshark进行抓包分析，但当时写过滤表达式很是一知半解，多半是从网上抄来的，根本没理解过滤表达式的含义。今天有幸看到一篇t</description>
    </item>
    
    <item>
      <title>获取docker容器的主机虚拟网卡</title>
      <link>https://jeremyxu2010.github.io/2016/09/%E8%8E%B7%E5%8F%96docker%E5%AE%B9%E5%99%A8%E7%9A%84%E4%B8%BB%E6%9C%BA%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1/</link>
      <pubDate>Mon, 19 Sep 2016 00:51:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/%E8%8E%B7%E5%8F%96docker%E5%AE%B9%E5%99%A8%E7%9A%84%E4%B8%BB%E6%9C%BA%E8%99%9A%E6%8B%9F%E7%BD%91%E5%8D%A1/</guid>
      <description>起因 今天看到一个做docker开发工程师写的如何实现docker网络隔离的方案，总的来说就是找到docker容器对应的主机虚拟网卡，然后使用</description>
    </item>
    
    <item>
      <title>研究Open vSwitch</title>
      <link>https://jeremyxu2010.github.io/2016/09/%E7%A0%94%E7%A9%B6open-vswitch/</link>
      <pubDate>Fri, 09 Sep 2016 01:48:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/%E7%A0%94%E7%A9%B6open-vswitch/</guid>
      <description>概念 现在云计算大行其道，以kvm和docker为代表，极大地利用了机器的硬件资源，模拟了操作系统，而在海量虚拟机场景下，传统的硬件交换机越来</description>
    </item>
    
    <item>
      <title>重新理解HTTP中的“持久连接”</title>
      <link>https://jeremyxu2010.github.io/2016/09/%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3http%E4%B8%AD%E7%9A%84%E6%8C%81%E4%B9%85%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Mon, 05 Sep 2016 23:16:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3http%E4%B8%AD%E7%9A%84%E6%8C%81%E4%B9%85%E8%BF%9E%E6%8E%A5/</guid>
      <description>Web页面优化中有一条很重要的规则说应在不影响代码可阅读性的前提下尽量减少请求数。以前一直以为过多的请求数会导致要建立大量连接，所以影响页面</description>
    </item>
    
    <item>
      <title>java中用好cache</title>
      <link>https://jeremyxu2010.github.io/2016/09/java%E4%B8%AD%E7%94%A8%E5%A5%BDcache/</link>
      <pubDate>Thu, 01 Sep 2016 23:46:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/java%E4%B8%AD%E7%94%A8%E5%A5%BDcache/</guid>
      <description>在java开发中经常会遇到下面的代码： Graph get(Key key) { Graph result = get( key ); if( null == result ) { result = createNewGraph( key ); put( key, result ); } return result; } 即根据某个Key值，到缓存里查找是否有对应的</description>
    </item>
    
    <item>
      <title>研究pipework</title>
      <link>https://jeremyxu2010.github.io/2016/09/%E7%A0%94%E7%A9%B6pipework/</link>
      <pubDate>Thu, 01 Sep 2016 22:46:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/09/%E7%A0%94%E7%A9%B6pipework/</guid>
      <description>很早以前就听说过pipework，据说面对一些复杂的网络配置场景，docker自带的网络模式就有些力不从心了，很多人都在用pipework。</description>
    </item>
    
    <item>
      <title>尝试docker的overlay网络</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E5%B0%9D%E8%AF%95docker%E7%9A%84overlay%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Mon, 29 Aug 2016 00:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E5%B0%9D%E8%AF%95docker%E7%9A%84overlay%E7%BD%91%E7%BB%9C/</guid>
      <description>docker搭建起集群后，跨主机的容器相互之间通信就要另想方案了。幸好docker1.9之后内置了跨节点通信技术Overlay网络，这里将使</description>
    </item>
    
    <item>
      <title>Docker生态会重蹈Hadoop的覆辙吗？(转)</title>
      <link>https://jeremyxu2010.github.io/2016/08/docker%E7%94%9F%E6%80%81%E4%BC%9A%E9%87%8D%E8%B9%88hadoop%E7%9A%84%E8%A6%86%E8%BE%99%E5%90%97%E8%BD%AC/</link>
      <pubDate>Sun, 28 Aug 2016 22:23:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/docker%E7%94%9F%E6%80%81%E4%BC%9A%E9%87%8D%E8%B9%88hadoop%E7%9A%84%E8%A6%86%E8%BE%99%E5%90%97%E8%BD%AC/</guid>
      <description>docker最近一年可真是火，不过刚好看到下面这篇文章，觉得还是很有道理的。转载过来研读并思考一下，转载自这里。 Docker的兴起和Hado</description>
    </item>
    
    <item>
      <title>重搭docker集群</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E9%87%8D%E6%90%ADdocker%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Wed, 24 Aug 2016 23:39:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E9%87%8D%E6%90%ADdocker%E9%9B%86%E7%BE%A4/</guid>
      <description>以前尝试使用consul搭建了docker集群，当时对底层为什么要执行那些命令不是太理解，直到昨天研究了etcd集群之后，终于对docker</description>
    </item>
    
    <item>
      <title>云服务器上ssh服务安全加固</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8Assh%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</link>
      <pubDate>Wed, 24 Aug 2016 22:00:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8Assh%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</guid>
      <description>今天到一个朋友的创业公司进行技术交流，交流过程中，朋友提到他在阿里云上买的linux服务器上ssh服务经常被人暴力破解。我感觉很奇怪，一般来</description>
    </item>
    
    <item>
      <title>学习etcd</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E5%AD%A6%E4%B9%A0etcd/</link>
      <pubDate>Wed, 24 Aug 2016 01:24:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E5%AD%A6%E4%B9%A0etcd/</guid>
      <description>很早之前就听说过etcd，只记得是一个跟zookeeper很类似的东西，可以用来实现分布式锁。但一直没有关心这个东西到底是如何部署的，部署时</description>
    </item>
    
    <item>
      <title>使用阿里云API刷新CDN缓存</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91api%E5%88%B7%E6%96%B0cdn%E7%BC%93%E5%AD%98/</link>
      <pubDate>Mon, 22 Aug 2016 22:45:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91api%E5%88%B7%E6%96%B0cdn%E7%BC%93%E5%AD%98/</guid>
      <description>本时工作中经常需要向阿里云环境部署新的版本，部署完毕之后需要到阿里云管理控制台刷新页面的CDN缓存。这个过程中部署部分我现在是使用bash脚</description>
    </item>
    
    <item>
      <title>排序算法python实现</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95python%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 21 Aug 2016 19:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95python%E5%AE%9E%E7%8E%B0/</guid>
      <description>编写软件最基础莫过于算法了。今天在翻阅python的学习资料时，看到了别人用python实现的8大排序算法。很惭愧作为一个9年工作经验的程序</description>
    </item>
    
    <item>
      <title>python语言学习备忘</title>
      <link>https://jeremyxu2010.github.io/2016/08/python%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sun, 21 Aug 2016 14:48:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/python%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E5%A4%87%E5%BF%98/</guid>
      <description>作为一个有多年Java开发经验的老程序员，最近却被python精练的语法迷住了。同时发现python语言在云计算、系统运维领域确实用得很多，</description>
    </item>
    
    <item>
      <title>初识ceph</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E5%88%9D%E8%AF%86ceph/</link>
      <pubDate>Wed, 17 Aug 2016 22:57:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E5%88%9D%E8%AF%86ceph/</guid>
      <description>ceph作为新一代的PB级高可靠性分布存储系统已经流行很长时间了，在研究了glusterfs之后，一直想找个机会研究一下它，这周终于抽出来时</description>
    </item>
    
    <item>
      <title>制作CentOS6基础镜像</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E5%88%B6%E4%BD%9Ccentos6%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F/</link>
      <pubDate>Sun, 07 Aug 2016 23:29:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E5%88%B6%E4%BD%9Ccentos6%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F/</guid>
      <description>搭建私有云时需要制作一些操作系统的基础镜像，这里也有一些持巧，在这里记录下来以备忘。 安装CentOS6操作系统 这里没有太多好说的，我是从这里</description>
    </item>
    
    <item>
      <title>试用WebVirtMgr</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E8%AF%95%E7%94%A8webvirtmgr/</link>
      <pubDate>Sun, 07 Aug 2016 00:36:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E8%AF%95%E7%94%A8webvirtmgr/</guid>
      <description>最近一段时间一直在试用各种KVM虚拟化管理平台，主要试用了ovirt、openstack、WebVirtMgr。最后发现针对我目前的工作场景</description>
    </item>
    
    <item>
      <title>保存mysql InnoDB的auto_increment值另类方案</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E4%BF%9D%E5%AD%98mysql-innodb%E7%9A%84auto_increment%E5%80%BC%E5%8F%A6%E7%B1%BB%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 04 Aug 2016 23:42:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E4%BF%9D%E5%AD%98mysql-innodb%E7%9A%84auto_increment%E5%80%BC%E5%8F%A6%E7%B1%BB%E6%96%B9%E6%A1%88/</guid>
      <description>问题描述 mysql数据库有auto_increment这样一个特性，一般是用来设置Integer类型主键自增长。比如下面的代码： -- 刚创建表，</description>
    </item>
    
    <item>
      <title>试用openstack</title>
      <link>https://jeremyxu2010.github.io/2016/08/%E8%AF%95%E7%94%A8openstack/</link>
      <pubDate>Tue, 02 Aug 2016 23:37:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/08/%E8%AF%95%E7%94%A8openstack/</guid>
      <description>公司有八九台服务器一直由我负责运维，这些服务器的配置参次不齐，主要部署了研发的持续集成环境、测试环境、性能压测环境、maven私服等一系列支</description>
    </item>
    
    <item>
      <title>私有云数据中心NTP服务搭建</title>
      <link>https://jeremyxu2010.github.io/2016/07/%E7%A7%81%E6%9C%89%E4%BA%91%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83ntp%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Wed, 27 Jul 2016 23:45:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/07/%E7%A7%81%E6%9C%89%E4%BA%91%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83ntp%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</guid>
      <description>搭建私有云环境，为了确保数据中心内部服务器的时间一致，一般建议在数据中心内部搭建NTP服务。这里将搭建NTP服务器的过程简单记录一下以备忘。</description>
    </item>
    
    <item>
      <title>初识glusterfs</title>
      <link>https://jeremyxu2010.github.io/2016/07/%E5%88%9D%E8%AF%86glusterfs/</link>
      <pubDate>Mon, 25 Jul 2016 02:27:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/07/%E5%88%9D%E8%AF%86glusterfs/</guid>
      <description>工作中经常发现公司机房里有些服务器上的硬盘空间不足，但还存在一些服务器上有很多空余空间，所以一直在想如何高效利用这些硬盘空间的问题。最初的解</description>
    </item>
    
    <item>
      <title>JVM的Finalization Delay引起的OOM</title>
      <link>https://jeremyxu2010.github.io/2016/07/jvm%E7%9A%84finalization-delay%E5%BC%95%E8%B5%B7%E7%9A%84oom/</link>
      <pubDate>Wed, 13 Jul 2016 22:03:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/07/jvm%E7%9A%84finalization-delay%E5%BC%95%E8%B5%B7%E7%9A%84oom/</guid>
      <description>今天在压力测试环境某一个服务出现crash了，经过一番检查，终于发现是由于JVM的Finalization Delay引起的，这个问题比较特殊</description>
    </item>
    
    <item>
      <title>Systemd 入门教程（转载）</title>
      <link>https://jeremyxu2010.github.io/2016/07/systemd-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%E8%BD%AC%E8%BD%BD/</link>
      <pubDate>Mon, 04 Jul 2016 00:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/07/systemd-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%E8%BD%AC%E8%BD%BD/</guid>
      <description>最近开始使用CentOS7了，跟CentOS6相比最大的变更可能就是守护进程由init改为了systemd。在网上看到阮一峰的“System</description>
    </item>
    
    <item>
      <title>使用cgroup控制系统资源</title>
      <link>https://jeremyxu2010.github.io/2016/07/%E4%BD%BF%E7%94%A8cgroup%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90/</link>
      <pubDate>Sun, 03 Jul 2016 23:43:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/07/%E4%BD%BF%E7%94%A8cgroup%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90/</guid>
      <description>工作中需要对mongodb进程进行，控制它最多使用的内存，简单想了一下，想到可以使用linux中的cgroup完成此功能，于是研究了一下cg</description>
    </item>
    
    <item>
      <title>搭建简易的docker集群</title>
      <link>https://jeremyxu2010.github.io/2016/06/%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E7%9A%84docker%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Wed, 29 Jun 2016 02:27:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/06/%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E7%9A%84docker%E9%9B%86%E7%BE%A4/</guid>
      <description>今天又抽时间研究了一下如何搭建docker集群，终于找到配合consul、docker-machine、swarm搭建一个简易docker集</description>
    </item>
    
    <item>
      <title>试用docker功能</title>
      <link>https://jeremyxu2010.github.io/2016/06/%E8%AF%95%E7%94%A8docker%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Sun, 19 Jun 2016 23:19:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/06/%E8%AF%95%E7%94%A8docker%E5%8A%9F%E8%83%BD/</guid>
      <description>花了好几天，终于看完了《Docker进阶与实战》，今天终于抽出时间来实践一把，这里把今天实战的过程记录一下。 安装Docker 因为我使用的Ma</description>
    </item>
    
    <item>
      <title>Netty框架研究</title>
      <link>https://jeremyxu2010.github.io/2016/06/netty%E6%A1%86%E6%9E%B6%E7%A0%94%E7%A9%B6/</link>
      <pubDate>Sat, 18 Jun 2016 22:51:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/06/netty%E6%A1%86%E6%9E%B6%E7%A0%94%E7%A9%B6/</guid>
      <description>起因 以前也用Netty做到异步网络编程，用过之后也一直没想过要把Netty拿起来重新研究一翻，直到上周工作中遇到一个棘手的问题。 在我们的项目</description>
    </item>
    
    <item>
      <title>实例变量的懒初始化</title>
      <link>https://jeremyxu2010.github.io/2016/06/%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F%E7%9A%84%E6%87%92%E5%88%9D%E5%A7%8B%E5%8C%96/</link>
      <pubDate>Sat, 11 Jun 2016 22:46:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/06/%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F%E7%9A%84%E6%87%92%E5%88%9D%E5%A7%8B%E5%8C%96/</guid>
      <description>今天遇到一个很有趣的问题，由于业务要求，需要懒初始化一个实例变量。 简单方法 很顺手就写出下面的代码。 public class LazyFieldInitializer { private Object obj = null; public LazyFieldInitializer(){ } public void someOp(){ if(obj == null){ obj = new</description>
    </item>
    
    <item>
      <title>通过WebSocket传输文件</title>
      <link>https://jeremyxu2010.github.io/2016/06/%E9%80%9A%E8%BF%87websocket%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 11 Jun 2016 19:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/06/%E9%80%9A%E8%BF%87websocket%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/</guid>
      <description>工作中需要将大量文件从一台服务器传输至另一台服务器，最开始是直接使用基础的TCP编程搞定的。但后来业务上要求两台服务器间只能走HTTP协议，</description>
    </item>
    
    <item>
      <title>处理一个NodeJS程序内存泄露的问题</title>
      <link>https://jeremyxu2010.github.io/2016/05/%E5%A4%84%E7%90%86%E4%B8%80%E4%B8%AAnodejs%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 29 May 2016 00:17:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/%E5%A4%84%E7%90%86%E4%B8%80%E4%B8%AAnodejs%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>这几天使用WebDriver写了个网页黑盒测试脚本，使用的是NodeJS SDK，但脚本运行时间比较长时，感觉node进程的内存占用越来越多，</description>
    </item>
    
    <item>
      <title>WEB界面测试实践之Selenium WebDriver</title>
      <link>https://jeremyxu2010.github.io/2016/05/web%E7%95%8C%E9%9D%A2%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5%E4%B9%8Bselenium-webdriver/</link>
      <pubDate>Sun, 22 May 2016 22:54:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/web%E7%95%8C%E9%9D%A2%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5%E4%B9%8Bselenium-webdriver/</guid>
      <description>工作中需要对web界面进行测试，在网上找了找解决方案，最终找到了Selenium WebDriver。 WebDriver简介 The primary new feature in Selenium 2.0 is the</description>
    </item>
    
    <item>
      <title>获取后台任务进度的另类办法</title>
      <link>https://jeremyxu2010.github.io/2016/05/%E8%8E%B7%E5%8F%96%E5%90%8E%E5%8F%B0%E4%BB%BB%E5%8A%A1%E8%BF%9B%E5%BA%A6%E7%9A%84%E5%8F%A6%E7%B1%BB%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Mon, 16 May 2016 01:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/%E8%8E%B7%E5%8F%96%E5%90%8E%E5%8F%B0%E4%BB%BB%E5%8A%A1%E8%BF%9B%E5%BA%A6%E7%9A%84%E5%8F%A6%E7%B1%BB%E5%8A%9E%E6%B3%95/</guid>
      <description>今天看到jdeferred文档中一个关于Asynchronous Servlet的例子，如下 @WebServlet(value = &amp;#34;/AsyncServlet&amp;#34;, asyncSupported = true) public class AsyncServlet extends HttpServlet { private static final long serialVersionUID = 1L; private ExecutorService executorService = Executors.newCachedThreadPool(); private</description>
    </item>
    
    <item>
      <title>现代Web开发系列教程_07</title>
      <link>https://jeremyxu2010.github.io/2016/05/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_07/</link>
      <pubDate>Sun, 15 May 2016 00:07:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_07/</guid>
      <description>今天结合前面说到的前后端开发知识，做一个小工程，这个小工程并不完全具体的业务功能，但该工程包括前后端，可以作为以后复杂工程的起点。 前端代码 前</description>
    </item>
    
    <item>
      <title>Java监听目录文件变更</title>
      <link>https://jeremyxu2010.github.io/2016/05/java%E7%9B%91%E5%90%AC%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%8F%98%E6%9B%B4/</link>
      <pubDate>Thu, 12 May 2016 23:38:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/java%E7%9B%91%E5%90%AC%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%8F%98%E6%9B%B4/</guid>
      <description>Java 7中提供了java.nio.file.WatchService用来监听文件系统目录变更，用起来还是比较简单的，在这里记录一下。 创建一个Wa</description>
    </item>
    
    <item>
      <title>Web跨域总结</title>
      <link>https://jeremyxu2010.github.io/2016/05/web%E8%B7%A8%E5%9F%9F%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 11 May 2016 00:46:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/web%E8%B7%A8%E5%9F%9F%E6%80%BB%E7%BB%93/</guid>
      <description>什么是同源 浏览器安全的基石是&amp;quot;同源政策&amp;rdquo;，所有浏览器都实行这个政策。所谓两个网页&amp;quot;同源&amp;quot;指的两个网</description>
    </item>
    
    <item>
      <title>Java NIO File操作</title>
      <link>https://jeremyxu2010.github.io/2016/05/java-nio-file%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 09 May 2016 23:58:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/java-nio-file%E6%93%8D%E4%BD%9C/</guid>
      <description>今天在工作中遇到一个很奇怪的问题。使用java.io.File进行文件操作抛出了FileNotFoundException，代码如下 //但事</description>
    </item>
    
    <item>
      <title>Web应用程序限速方法</title>
      <link>https://jeremyxu2010.github.io/2016/05/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E9%99%90%E9%80%9F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 09 May 2016 00:15:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E9%99%90%E9%80%9F%E6%96%B9%E6%B3%95/</guid>
      <description>一般来说Web应用程序的开发者不太关心网络限速的问题。所以通常写的程序逻辑基本认为用户提交上来的数据速率越快越好；用户下载文件时，下载越快越</description>
    </item>
    
    <item>
      <title>koa框架源码解读</title>
      <link>https://jeremyxu2010.github.io/2016/05/koa%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</link>
      <pubDate>Fri, 06 May 2016 00:44:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/koa%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</guid>
      <description>虽然经常用koa作为NodeJS Web项目的框架，但一直都是只知道怎么做，但并不知道它究竟是怎么实现的。今天花了些时间来研究它，在这里记录一</description>
    </item>
    
    <item>
      <title>Java NIO中Buffer使用备忘</title>
      <link>https://jeremyxu2010.github.io/2016/05/java-nio%E4%B8%ADbuffer%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</link>
      <pubDate>Tue, 03 May 2016 22:51:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/java-nio%E4%B8%ADbuffer%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</guid>
      <description>很长时间都是在用Netty进行网络编程，Java原生NIO的很多概念都忘得差不多了，今天在工作中遇到要使用ByteBuffer，发现竟然已经</description>
    </item>
    
    <item>
      <title>锁定NodeJS项目的依赖库</title>
      <link>https://jeremyxu2010.github.io/2016/05/%E9%94%81%E5%AE%9Anodejs%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%BE%9D%E8%B5%96%E5%BA%93/</link>
      <pubDate>Tue, 03 May 2016 21:58:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/%E9%94%81%E5%AE%9Anodejs%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%BE%9D%E8%B5%96%E5%BA%93/</guid>
      <description>今天一上班，顺手点了一次构建整个项目，结果发现项目中的javascript编译报错，而且报的错莫名其秒。 undefined is not iterable! 搜遍互联网才在babel的t</description>
    </item>
    
    <item>
      <title>nginx使用备忘</title>
      <link>https://jeremyxu2010.github.io/2016/05/nginx%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</link>
      <pubDate>Mon, 02 May 2016 01:35:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/05/nginx%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</guid>
      <description>工作中经常要用到nginx，这里将使用nginx最常要用到的技巧记录下来以备忘。 安装 在linux或mac下安装nginx还是很简单的，我一般</description>
    </item>
    
    <item>
      <title>现代Web开发系列教程_06</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_06/</link>
      <pubDate>Tue, 26 Apr 2016 21:58:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_06/</guid>
      <description>作为一个从事多年Java Web开发的程序员，面对现如今NodeJS开发Web后端程序一直十分感兴趣，于是花了点时间研究了下，本篇就主要说一说</description>
    </item>
    
    <item>
      <title>现代Web开发系列教程_05</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_05/</link>
      <pubDate>Sun, 17 Apr 2016 23:41:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_05/</guid>
      <description>本篇不开发新的功能，不过对目前的编译环境重新整理一下。 区别开发编译与生产编译 在webpack.config.js中添加读取环境变量NODE_</description>
    </item>
    
    <item>
      <title>现代Web开发系列教程_04</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_04/</link>
      <pubDate>Sun, 17 Apr 2016 21:52:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_04/</guid>
      <description>本篇使用redux结合react重写刚才那个很简单的hello world示例。 redux的理念 redux有三个重要的理念：单一数据源、状态是</description>
    </item>
    
    <item>
      <title>现代Web开发系列教程_03</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_03/</link>
      <pubDate>Sun, 17 Apr 2016 15:26:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B_03/</guid>
      <description>现在我们使用React重写昨天的hello world示例。本篇涉及了很多react的知识，如果不清楚，建议先看看react官方文档 安装rea</description>
    </item>
    
    <item>
      <title>现代Web开发教程系列_02</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97_02/</link>
      <pubDate>Sat, 16 Apr 2016 23:38:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97_02/</guid>
      <description>引言 本文从一个很小的前端工程说起，慢慢推导出我目前多个项目前端实践的工程结构。 为Web前端项目建工程 Web工程需要建工程吗？不是建个目录就可</description>
    </item>
    
    <item>
      <title>现代Web开发教程系列_01</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97_01/</link>
      <pubDate>Sat, 16 Apr 2016 23:37:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97_01/</guid>
      <description>##引言 工作大概9年了，就算不算上在学校里的写网页的经历，其实从事与Web前端有关的开发已经8年。这8年我自己也随着Web开发技术的革新，也</description>
    </item>
    
    <item>
      <title>TL-WR941D路由器刷OpenWRT备忘</title>
      <link>https://jeremyxu2010.github.io/2016/04/tl-wr941d%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7openwrt%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sat, 16 Apr 2016 20:37:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/tl-wr941d%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7openwrt%E5%A4%87%E5%BF%98/</guid>
      <description>家里的路由器TL-WR941D还是多年前买的，之前一直用着还挺稳定的，只不过有时觉得网速有点慢。最近却频频遇到问题，一会儿ping国外某个I</description>
    </item>
    
    <item>
      <title>JVM底层知识备忘</title>
      <link>https://jeremyxu2010.github.io/2016/04/jvm%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86%E5%A4%87%E5%BF%98/</link>
      <pubDate>Thu, 14 Apr 2016 00:28:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/jvm%E5%BA%95%E5%B1%82%E7%9F%A5%E8%AF%86%E5%A4%87%E5%BF%98/</guid>
      <description>今天的工作涉及了不少JVM底层的知识，趁着今天刚翻阅资料，还记得一些内容，将我常用的JVM知识整理一下。 JVM组成 JVM = 类加载器 classloader + 执行引擎 execution</description>
    </item>
    
    <item>
      <title>sed命令工作原理及命令备忘</title>
      <link>https://jeremyxu2010.github.io/2016/04/sed%E5%91%BD%E4%BB%A4%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E5%8F%8A%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98/</link>
      <pubDate>Tue, 12 Apr 2016 23:10:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/sed%E5%91%BD%E4%BB%A4%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E5%8F%8A%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98/</guid>
      <description>sed是一个非交互式的流编辑器（stream editor）。所谓非交互式，是指使用sed只能在命令行下输入编辑命令来编辑文本，然后在屏幕上查</description>
    </item>
    
    <item>
      <title>javacv编码mp4视频</title>
      <link>https://jeremyxu2010.github.io/2016/04/javacv%E7%BC%96%E7%A0%81mp4%E8%A7%86%E9%A2%91/</link>
      <pubDate>Sun, 10 Apr 2016 18:29:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/javacv%E7%BC%96%E7%A0%81mp4%E8%A7%86%E9%A2%91/</guid>
      <description>目前在做的java项目里有一个需求，已经将用户在进行一个业务操作的操作行为记录下来了，形成了这些操作行为的指令文件，然后需要将这些指令文件编</description>
    </item>
    
    <item>
      <title>开发者的博客写作环境</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sun, 10 Apr 2016 13:53:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%E7%8E%AF%E5%A2%83/</guid>
      <description>作为一个开发者，本时有工作中肯定有技术上各种点点滴滴想记下来，毕竟好记忆不如烂笔头。当然使用一个笔记工具完全可以满足这个需求。但同时我在想能</description>
    </item>
    
    <item>
      <title>MAC翻墙简易教程</title>
      <link>https://jeremyxu2010.github.io/2016/04/mac%E7%BF%BB%E5%A2%99%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 10 Apr 2016 13:26:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/mac%E7%BF%BB%E5%A2%99%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/</guid>
      <description>买一个国外的VPS主机 我是在digitalocean.com上买的，选的操作系统为CentOS 7 服务端操作 启用TCP BBR yum upgrade -y wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;amp;&amp;amp; chmod +x bbr.sh &amp;amp;&amp;amp;</description>
    </item>
    
    <item>
      <title>我的VIM配置</title>
      <link>https://jeremyxu2010.github.io/2016/04/%E6%88%91%E7%9A%84vim%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 10 Apr 2016 02:33:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2016/04/%E6%88%91%E7%9A%84vim%E9%85%8D%E7%BD%AE/</guid>
      <description>这个我自己的vim配置，以备我在一台全新的MAC电脑上恢复原来的vim配置 安装vim brew install vim --with-lua 安装vundle mkdir -p ~/.vim/bundle git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle 克隆vim-con</description>
    </item>
    
    <item>
      <title>rsync配合ssh在不稳定网络下传输大文件</title>
      <link>https://jeremyxu2010.github.io/2015/06/rsync%E9%85%8D%E5%90%88ssh%E5%9C%A8%E4%B8%8D%E7%A8%B3%E5%AE%9A%E7%BD%91%E7%BB%9C%E4%B8%8B%E4%BC%A0%E8%BE%93%E5%A4%A7%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 30 Jun 2015 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2015/06/rsync%E9%85%8D%E5%90%88ssh%E5%9C%A8%E4%B8%8D%E7%A8%B3%E5%AE%9A%E7%BD%91%E7%BB%9C%E4%B8%8B%E4%BC%A0%E8%BE%93%E5%A4%A7%E6%96%87%E4%BB%B6/</guid>
      <description>今天的工作需要将一个很大的文件传输出远程主机上，远程主机只开启了sshd服务，仅允许ssh登录，不允许安装其它软件，到远程主机的网络很不稳定</description>
    </item>
    
    <item>
      <title>使用fail2ban进行DDOS防护</title>
      <link>https://jeremyxu2010.github.io/2015/06/%E4%BD%BF%E7%94%A8fail2ban%E8%BF%9B%E8%A1%8Cddos%E9%98%B2%E6%8A%A4/</link>
      <pubDate>Tue, 30 Jun 2015 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2015/06/%E4%BD%BF%E7%94%A8fail2ban%E8%BF%9B%E8%A1%8Cddos%E9%98%B2%E6%8A%A4/</guid>
      <description>朋友公司一网站被DDOS攻击了，不得已在机房呆了两天作防护工作，才算临时解决了问题。想着自己公司线上也运行着一个系统，担心有一天也会被攻击，</description>
    </item>
    
    <item>
      <title>使用logrotate进行日志分割及滚动处理</title>
      <link>https://jeremyxu2010.github.io/2015/04/%E4%BD%BF%E7%94%A8logrotate%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2%E5%8F%8A%E6%BB%9A%E5%8A%A8%E5%A4%84%E7%90%86/</link>
      <pubDate>Thu, 30 Apr 2015 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2015/04/%E4%BD%BF%E7%94%A8logrotate%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2%E5%8F%8A%E6%BB%9A%E5%8A%A8%E5%A4%84%E7%90%86/</guid>
      <description>linux server上服务一般持续长久运行，以致服务的日志文件随着时间越来越大，如果日志处理得不好甚至有可能占满磁盘。幸好找到了logrotate</description>
    </item>
    
    <item>
      <title>使用grunt对css中的background图片自动生成雪碧图</title>
      <link>https://jeremyxu2010.github.io/2015/03/%E4%BD%BF%E7%94%A8grunt%E5%AF%B9css%E4%B8%AD%E7%9A%84background%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E9%9B%AA%E7%A2%A7%E5%9B%BE/</link>
      <pubDate>Tue, 31 Mar 2015 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2015/03/%E4%BD%BF%E7%94%A8grunt%E5%AF%B9css%E4%B8%AD%E7%9A%84background%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E9%9B%AA%E7%A2%A7%E5%9B%BE/</guid>
      <description>公司研发的系统为B/S架构，用户使用浏览器访问系统时，使用浏览器自带工具查看，对图片的请求数极多，多为小图片。 今天想对这个现状进行改善，网上</description>
    </item>
    
    <item>
      <title>atom-shell小例子</title>
      <link>https://jeremyxu2010.github.io/2014/06/atom-shell%E5%B0%8F%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Mon, 30 Jun 2014 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2014/06/atom-shell%E5%B0%8F%E4%BE%8B%E5%AD%90/</guid>
      <description>今天一个朋友问我一个问题，他想做一个win32的桌面应用程序，而且还希望程序能做出web页面那种漂亮的效果，可目前项目组的成员全是以前做前端</description>
    </item>
    
    <item>
      <title>nagios安装配置</title>
      <link>https://jeremyxu2010.github.io/2014/06/nagios%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 30 Jun 2014 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2014/06/nagios%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>上线的服务器有时会被人攻击，导致服务不可用，今天安装配置了nagios对上线服务器进行监控，简单记录一下 #安装必要的软件包 yum install -y gcc glibc glibc-common gd gd-devel xinetd</description>
    </item>
    
    <item>
      <title>初识grunt</title>
      <link>https://jeremyxu2010.github.io/2014/05/%E5%88%9D%E8%AF%86grunt/</link>
      <pubDate>Fri, 30 May 2014 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2014/05/%E5%88%9D%E8%AF%86grunt/</guid>
      <description>很早就听人提过grunt，我的概念里一直认为它是一个类似java界maven的东西，帮助开发人员从频繁地编译、配置管理等工作中解放出来。今天</description>
    </item>
    
    <item>
      <title>linux下进行端口映射</title>
      <link>https://jeremyxu2010.github.io/2014/04/linux%E4%B8%8B%E8%BF%9B%E8%A1%8C%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</link>
      <pubDate>Wed, 30 Apr 2014 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2014/04/linux%E4%B8%8B%E8%BF%9B%E8%A1%8C%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</guid>
      <description>工作需要将某个具有外网IP的server的某个端口映射到某个内网IP的server的相同端口上。 首先想到使用NAT，命令如下 echo &amp;#34;1&amp;#34; &amp;gt; /proc/sys/net/ipv4/ip_forward iptables -t nat -I</description>
    </item>
    
    <item>
      <title>atom-shell_mac版应用打包</title>
      <link>https://jeremyxu2010.github.io/2014/03/atom-shell_mac%E7%89%88%E5%BA%94%E7%94%A8%E6%89%93%E5%8C%85/</link>
      <pubDate>Sun, 30 Mar 2014 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2014/03/atom-shell_mac%E7%89%88%E5%BA%94%E7%94%A8%E6%89%93%E5%8C%85/</guid>
      <description>上一篇文章写了一个简单的PingDemo应用，今天参照atom-shell的文档将那个应用打包到mac应用，试了多久终于成功了，记录一下。 a</description>
    </item>
    
    <item>
      <title>linux下设置电信网通双线路IP地址</title>
      <link>https://jeremyxu2010.github.io/2014/03/linux%E4%B8%8B%E8%AE%BE%E7%BD%AE%E7%94%B5%E4%BF%A1%E7%BD%91%E9%80%9A%E5%8F%8C%E7%BA%BF%E8%B7%AFip%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Sun, 30 Mar 2014 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2014/03/linux%E4%B8%8B%E8%AE%BE%E7%BD%AE%E7%94%B5%E4%BF%A1%E7%BD%91%E9%80%9A%E5%8F%8C%E7%BA%BF%E8%B7%AFip%E5%9C%B0%E5%9D%80/</guid>
      <description>工作上遇到需要在linux下设置电信网通双线路IP地址，操作系统为Suse Linux Enterprise Linux 11 SP2，简要记录下步骤： 编辑/etc/sysconfig/</description>
    </item>
    
    <item>
      <title>特别要检查Java文件操作相关方法的返回值</title>
      <link>https://jeremyxu2010.github.io/2014/03/%E7%89%B9%E5%88%AB%E8%A6%81%E6%A3%80%E6%9F%A5java%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/</link>
      <pubDate>Sun, 30 Mar 2014 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2014/03/%E7%89%B9%E5%88%AB%E8%A6%81%E6%A3%80%E6%9F%A5java%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/</guid>
      <description>今天遇到一个很狗血的问题，一个功能在开发环境没有问题，但在生产环境出错了。 代码如下： ... File tmpFile = new File(fileTmpPath); File newFileTarget = new File(filePath); tmpFile.renameTo(newFileTarget); // 修改新文件的权限 FileManageHelper.chmod(newFileTarget); .... 最后报错信</description>
    </item>
    
    <item>
      <title>Video.js简单使用</title>
      <link>https://jeremyxu2010.github.io/2013/10/video.js%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 31 Oct 2013 01:40:00 +0800</pubDate>
      
      <guid>https://jeremyxu2010.github.io/2013/10/video.js%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>今天项目中需要跨浏览器地播放视频，在网上找了一下，找到了video.js，记录一下video.js的简单用法。 &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; ... &amp;lt;!--引入vid</description>
    </item>
    
  </channel>
</rss>